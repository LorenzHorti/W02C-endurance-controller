
W02C endurance controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001a80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a0c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000095  00800100  00800100  00001a80  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ab0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000113a  00000000  00000000  00001bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9d  00000000  00000000  00002cf2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b24  00000000  00000000  0000378f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000024c  00000000  00000000  000042b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000078f  00000000  00000000  00004500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004a4  00000000  00000000  00004c8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00005133  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
       8:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
       c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      10:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      14:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      18:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__vector_7>
      20:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      24:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      28:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__vector_11>
      30:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      34:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      38:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      3c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      40:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      44:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      48:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      4c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      50:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      54:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
      58:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_clear_bss>:
      68:	21 e0       	ldi	r18, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	01 c0       	rjmp	.+2      	; 0x72 <.do_clear_bss_start>

00000070 <.do_clear_bss_loop>:
      70:	1d 92       	st	X+, r1

00000072 <.do_clear_bss_start>:
      72:	a5 39       	cpi	r26, 0x95	; 149
      74:	b2 07       	cpc	r27, r18
      76:	e1 f7       	brne	.-8      	; 0x70 <.do_clear_bss_loop>
      78:	0e 94 4c 01 	call	0x298	; 0x298 <main>
      7c:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <_exit>

00000080 <__bad_interrupt>:
      80:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000084 <init_ports>:

void init_ports()
{
	/***** outputs *****/
	
	DDRD = 0xFF;			//com ports for thumb wheel switches
      84:	8f ef       	ldi	r24, 0xFF	; 255
      86:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0xFF;			//com ports for thumb wheel switches
      88:	87 b9       	out	0x07, r24	; 7
	
	//output ports to motor driver
	DDR_OUT(cw_port);		//for clockwise motor control
      8a:	25 9a       	sbi	0x04, 5	; 4
	DDR_OUT(ccw_port);		//for counter-clockwise motor control
      8c:	26 9a       	sbi	0x04, 6	; 4
	
	/***** inputs *****/		
	DDRA = 0x00;			//input pins for BCD data
      8e:	11 b8       	out	0x01, r1	; 1
	DDR_IN(start_pin);		//for start push button	
      90:	6a 98       	cbi	0x0d, 2	; 13
	DDR_IN(stop_pin);		//for stop push button
      92:	6b 98       	cbi	0x0d, 3	; 13
	DDR_IN(sensor_pin);		//for photo-int/encoder 
      94:	6c 98       	cbi	0x0d, 4	; 13
	
	WRITEHIGH(stop_pin);	//enable internal pull ups
      96:	73 9a       	sbi	0x0e, 3	; 14
	WRITEHIGH(start_pin);
      98:	72 9a       	sbi	0x0e, 2	; 14
	PORTA = 0xFF;			//ports for thumbwheel switches
      9a:	82 b9       	out	0x02, r24	; 2
      9c:	08 95       	ret

0000009e <init_timer>:
	timer1_ticks= cpu_clk/prescale 
				= (16MHz/8) 	
				= 2MHz or 0.5us		
	timer1_ovf	= 32.768ms					  
	*/
	TCCR1A = 0;
      9e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7fc080>
	TCCR1B |= (1<<WGM12);	//CTC
      a2:	e1 e8       	ldi	r30, 0x81	; 129
      a4:	f0 e0       	ldi	r31, 0x00	; 0
      a6:	80 81       	ld	r24, Z
      a8:	88 60       	ori	r24, 0x08	; 8
      aa:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A);  //enable timer 1 interrupt	
      ac:	ef e6       	ldi	r30, 0x6F	; 111
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	80 81       	ld	r24, Z
      b2:	82 60       	ori	r24, 0x02	; 2
      b4:	80 83       	st	Z, r24
	//TIMSK1 |= (1<<OCIE1A);  
	OCR1A = 0;
      b6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
      ba:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
			
	/*timer0_ticks = 500ns		
	timer0_oc_ovf   = 128us		
	*/
	TCCR0A |= (1<<CS01);	 // prescale=8
      be:	84 b5       	in	r24, 0x24	; 36
      c0:	82 60       	ori	r24, 0x02	; 2
      c2:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1<<TOIE0);
      c4:	ee e6       	ldi	r30, 0x6E	; 110
      c6:	f0 e0       	ldi	r31, 0x00	; 0
      c8:	80 81       	ld	r24, Z
      ca:	81 60       	ori	r24, 0x01	; 1
      cc:	80 83       	st	Z, r24
      ce:	08 95       	ret

000000d0 <__vector_11>:

volatile uint32_t timer0_100ms = 0;
uint32_t ctr_100ms_int =0;

ISR(TIMER0_OVF_vect)
{
      d0:	1f 92       	push	r1
      d2:	0f 92       	push	r0
      d4:	0f b6       	in	r0, 0x3f	; 63
      d6:	0f 92       	push	r0
      d8:	11 24       	eor	r1, r1
      da:	2f 93       	push	r18
      dc:	8f 93       	push	r24
      de:	9f 93       	push	r25
	timer_main_ovf++;
      e0:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <timer_main_ovf>
      e4:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <timer_main_ovf+0x1>
      e8:	01 96       	adiw	r24, 0x01	; 1
      ea:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <timer_main_ovf+0x1>
      ee:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <timer_main_ovf>
	timer_main_ovf -= timer_main_ovf_dec;
      f2:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <timer_main_ovf_dec>
      f6:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <timer_main_ovf>
      fa:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <timer_main_ovf+0x1>
      fe:	82 1b       	sub	r24, r18
     100:	91 09       	sbc	r25, r1
     102:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <timer_main_ovf+0x1>
     106:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <timer_main_ovf>
	timer_main_ovf_dec = 0;
     10a:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <timer_main_ovf_dec>
	interrupts_timer_main_ovf_ctr++;
     10e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <interrupts_timer_main_ovf_ctr>
     112:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     116:	01 96       	adiw	r24, 0x01	; 1
     118:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     11c:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <interrupts_timer_main_ovf_ctr>
	interrupts_timer_main_ovf_ctr -= interrupts_timer_main_ovf_dec;
     120:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <interrupts_timer_main_ovf_dec>
     124:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <interrupts_timer_main_ovf_ctr>
     128:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     12c:	82 1b       	sub	r24, r18
     12e:	91 09       	sbc	r25, r1
     130:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     134:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <interrupts_timer_main_ovf_ctr>
	interrupts_timer_main_ovf_dec = 0;
     138:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <interrupts_timer_main_ovf_dec>
}
     13c:	9f 91       	pop	r25
     13e:	8f 91       	pop	r24
     140:	2f 91       	pop	r18
     142:	0f 90       	pop	r0
     144:	0f be       	out	0x3f, r0	; 63
     146:	0f 90       	pop	r0
     148:	1f 90       	pop	r1
     14a:	18 95       	reti

0000014c <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
     14c:	1f 92       	push	r1
     14e:	0f 92       	push	r0
     150:	0f b6       	in	r0, 0x3f	; 63
     152:	0f 92       	push	r0
     154:	11 24       	eor	r1, r1
     156:	cf 92       	push	r12
     158:	df 92       	push	r13
     15a:	ef 92       	push	r14
     15c:	ff 92       	push	r15
     15e:	2f 93       	push	r18
     160:	3f 93       	push	r19
     162:	4f 93       	push	r20
     164:	5f 93       	push	r21
     166:	6f 93       	push	r22
     168:	7f 93       	push	r23
     16a:	8f 93       	push	r24
     16c:	9f 93       	push	r25
     16e:	af 93       	push	r26
     170:	bf 93       	push	r27
     172:	ef 93       	push	r30
     174:	ff 93       	push	r31
 	if (CHECKBIT(flag_motor2, MOTOR_2_DIR_CW))
     176:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     17a:	80 ff       	sbrs	r24, 0
     17c:	3d c0       	rjmp	.+122    	; 0x1f8 <__vector_7+0xac>
 	{
		TOGGLE_PIN(cw_port);
     17e:	95 b1       	in	r25, 0x05	; 5
     180:	80 e2       	ldi	r24, 0x20	; 32
     182:	89 27       	eor	r24, r25
     184:	85 b9       	out	0x05, r24	; 5
		cw_pulse_ctr++;
     186:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <cw_pulse_ctr>
     18a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <cw_pulse_ctr+0x1>
     18e:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <cw_pulse_ctr+0x2>
     192:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <cw_pulse_ctr+0x3>
     196:	01 96       	adiw	r24, 0x01	; 1
     198:	a1 1d       	adc	r26, r1
     19a:	b1 1d       	adc	r27, r1
     19c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <cw_pulse_ctr>
     1a0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <cw_pulse_ctr+0x1>
     1a4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <cw_pulse_ctr+0x2>
     1a8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <cw_pulse_ctr+0x3>
		if(cw_pulse_ctr>=(cw_setcnt_val*1000) && CHECKBIT(flag_switch, flag_start))
     1ac:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <cw_setcnt_val>
     1b0:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <cw_setcnt_val+0x1>
     1b4:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <cw_setcnt_val+0x2>
     1b8:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <cw_setcnt_val+0x3>
     1bc:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <cw_pulse_ctr>
     1c0:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <cw_pulse_ctr+0x1>
     1c4:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <cw_pulse_ctr+0x2>
     1c8:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <cw_pulse_ctr+0x3>
     1cc:	a8 ee       	ldi	r26, 0xE8	; 232
     1ce:	b3 e0       	ldi	r27, 0x03	; 3
     1d0:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     1d4:	c6 16       	cp	r12, r22
     1d6:	d7 06       	cpc	r13, r23
     1d8:	e8 06       	cpc	r14, r24
     1da:	f9 06       	cpc	r15, r25
     1dc:	08 f4       	brcc	.+2      	; 0x1e0 <__vector_7+0x94>
     1de:	47 c0       	rjmp	.+142    	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
     1e0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     1e4:	80 ff       	sbrs	r24, 0
     1e6:	43 c0       	rjmp	.+134    	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
		{
			if (!CHECKBIT(PINB,5))	//checks if cw_port/ccw_port is low  
     1e8:	1d 99       	sbic	0x03, 5	; 3
     1ea:	41 c0       	rjmp	.+130    	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
			{
				CLEARBIT(TCCR1B, CS11); // timer stopped
     1ec:	e1 e8       	ldi	r30, 0x81	; 129
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	80 81       	ld	r24, Z
     1f2:	8d 7f       	andi	r24, 0xFD	; 253
     1f4:	80 83       	st	Z, r24
     1f6:	3b c0       	rjmp	.+118    	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
			}
		}
	}
 	else 
	{
		TOGGLE_PIN(ccw_port);
     1f8:	95 b1       	in	r25, 0x05	; 5
     1fa:	80 e4       	ldi	r24, 0x40	; 64
     1fc:	89 27       	eor	r24, r25
     1fe:	85 b9       	out	0x05, r24	; 5
		ccw_pulse_ctr++;
     200:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <ccw_pulse_ctr>
     204:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <ccw_pulse_ctr+0x1>
     208:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <ccw_pulse_ctr+0x2>
     20c:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <ccw_pulse_ctr+0x3>
     210:	01 96       	adiw	r24, 0x01	; 1
     212:	a1 1d       	adc	r26, r1
     214:	b1 1d       	adc	r27, r1
     216:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ccw_pulse_ctr>
     21a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <ccw_pulse_ctr+0x1>
     21e:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <ccw_pulse_ctr+0x2>
     222:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <ccw_pulse_ctr+0x3>
		if(ccw_pulse_ctr>=(ccw_setcnt_val*1000) && CHECKBIT(flag_switch, flag_start))
     226:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <ccw_setcnt_val>
     22a:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <ccw_setcnt_val+0x1>
     22e:	40 91 58 01 	lds	r20, 0x0158	; 0x800158 <ccw_setcnt_val+0x2>
     232:	50 91 59 01 	lds	r21, 0x0159	; 0x800159 <ccw_setcnt_val+0x3>
     236:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <ccw_pulse_ctr>
     23a:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <ccw_pulse_ctr+0x1>
     23e:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <ccw_pulse_ctr+0x2>
     242:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <ccw_pulse_ctr+0x3>
     246:	a8 ee       	ldi	r26, 0xE8	; 232
     248:	b3 e0       	ldi	r27, 0x03	; 3
     24a:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     24e:	c6 16       	cp	r12, r22
     250:	d7 06       	cpc	r13, r23
     252:	e8 06       	cpc	r14, r24
     254:	f9 06       	cpc	r15, r25
     256:	58 f0       	brcs	.+22     	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
     258:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     25c:	80 ff       	sbrs	r24, 0
     25e:	07 c0       	rjmp	.+14     	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
		{
			if(!CHECKBIT(PINB,6))   //checks if ccw_port/ccw_port is low  
     260:	1e 99       	sbic	0x03, 6	; 3
     262:	05 c0       	rjmp	.+10     	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
			{
				CLEARBIT(TCCR1B, CS11); // timer stopped
     264:	e1 e8       	ldi	r30, 0x81	; 129
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	80 81       	ld	r24, Z
     26a:	8d 7f       	andi	r24, 0xFD	; 253
     26c:	80 83       	st	Z, r24
			}
		}
	}
	
}
     26e:	ff 91       	pop	r31
     270:	ef 91       	pop	r30
     272:	bf 91       	pop	r27
     274:	af 91       	pop	r26
     276:	9f 91       	pop	r25
     278:	8f 91       	pop	r24
     27a:	7f 91       	pop	r23
     27c:	6f 91       	pop	r22
     27e:	5f 91       	pop	r21
     280:	4f 91       	pop	r20
     282:	3f 91       	pop	r19
     284:	2f 91       	pop	r18
     286:	ff 90       	pop	r15
     288:	ef 90       	pop	r14
     28a:	df 90       	pop	r13
     28c:	cf 90       	pop	r12
     28e:	0f 90       	pop	r0
     290:	0f be       	out	0x3f, r0	; 63
     292:	0f 90       	pop	r0
     294:	1f 90       	pop	r1
     296:	18 95       	reti

00000298 <main>:

int main(void)
{
 
 init_ports();
     298:	0e 94 42 00 	call	0x84	; 0x84 <init_ports>
 init_timer();
     29c:	0e 94 4f 00 	call	0x9e	; 0x9e <init_timer>
 
 PORTD = 0xff;
     2a0:	8f ef       	ldi	r24, 0xFF	; 255
     2a2:	8b b9       	out	0x0b, r24	; 11
 PORTC = 0xff;
     2a4:	88 b9       	out	0x08, r24	; 8
 SETBIT(flag_switch, flag_stop);
     2a6:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     2aa:	82 60       	ori	r24, 0x02	; 2
     2ac:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
 CLEARBIT(flag_switch, flag_start);
     2b0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     2b4:	8e 7f       	andi	r24, 0xFE	; 254
     2b6:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
 SETBIT(flag_motor2, MOTOR_2_DIR_CW);
     2ba:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     2be:	81 60       	ori	r24, 0x01	; 1
     2c0:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <flag_motor2>
 flag_motor_1 = MOTOR_1_IDLE;
     2c4:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <flag_motor_1>
 sei();
     2c8:	78 94       	sei
 cw_setcnt_val_temp = 200;
 ccw_setcnt_val_temp = 200;
 cyc_cnt_val_temp = 200;
 ramp_time_val_temp = 1;	// sec*/

 dead_time_val_temp = 0.2;  // sec
     2ca:	8d ec       	ldi	r24, 0xCD	; 205
     2cc:	9c ec       	ldi	r25, 0xCC	; 204
     2ce:	ac e4       	ldi	r26, 0x4C	; 76
     2d0:	be e3       	ldi	r27, 0x3E	; 62
     2d2:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <dead_time_val_temp>
     2d6:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <dead_time_val_temp+0x1>
     2da:	a0 93 6f 01 	sts	0x016F, r26	; 0x80016f <dead_time_val_temp+0x2>
     2de:	b0 93 70 01 	sts	0x0170, r27	; 0x800170 <dead_time_val_temp+0x3>
					timer0_100ms+=main_time_diff;
					if (timer0_100ms >= TIMER0_100MS)
					{
						timer0_100ms = 0;
						motor_deceleration();
						if(!CHECKBIT(TCCR1B, CS11)) // if timer is stopped
     2e2:	c1 e8       	ldi	r28, 0x81	; 129
     2e4:	d0 e0       	ldi	r29, 0x00	; 0
									CLEARBIT(flag_switch, flag_start);
									CLEARBIT(flag_switch, flag_param_saved);
									SETBIT(flag_motor2, MOTOR_2_DIR_CW);
								}
							}
							FLIPBIT(flag_motor2, MOTOR_2_DIR_CW);
     2e6:	ee 24       	eor	r14, r14
     2e8:	e3 94       	inc	r14
					}
				break;
				case MOTOR_1_OPRTNG_SPD:
					if (motor_operating_spd())
					{
						flag_motor_1 = MOTOR_1_DECEL;
     2ea:	68 94       	set
     2ec:	ff 24       	eor	r15, r15
     2ee:	f2 f8       	bld	r15, 2
									CLEARBIT(flag_switch, flag_start);
									CLEARBIT(flag_switch, flag_param_saved);
									SETBIT(flag_motor2, MOTOR_2_DIR_CW);
								}
							}
							FLIPBIT(flag_motor2, MOTOR_2_DIR_CW);
     2f0:	0e 2d       	mov	r16, r14
					{
						timer0_100ms+= main_time_diff;
						if (timer0_100ms >= dead_time_val*TIMER0_100MS*10)
						{
							timer0_100ms = 0;
							flag_motor_1 = MOTOR_1_ACCEL;
     2f2:	12 e0       	ldi	r17, 0x02	; 2
 dead_time_val_temp = 0.2;  // sec

 
    while (1) 
    {	
		main_time_tick = TCNT0;
     2f4:	86 b5       	in	r24, 0x26	; 38
     2f6:	28 2f       	mov	r18, r24
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <main_time_tick+0x1>
     2fe:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <main_time_tick>
		if((main_time_prev > main_time_tick) && (!interrupts_timer_main_ovf_ctr))
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	a0 e0       	ldi	r26, 0x00	; 0
     306:	b0 e0       	ldi	r27, 0x00	; 0
     308:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <main_time_prev>
     30c:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <main_time_prev+0x1>
     310:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <main_time_prev+0x2>
     314:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <main_time_prev+0x3>
     318:	84 17       	cp	r24, r20
     31a:	95 07       	cpc	r25, r21
     31c:	a6 07       	cpc	r26, r22
     31e:	b7 07       	cpc	r27, r23
     320:	f0 f4       	brcc	.+60     	; 0x35e <main+0xc6>
     322:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <interrupts_timer_main_ovf_ctr>
     326:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     32a:	89 2b       	or	r24, r25
     32c:	c1 f4       	brne	.+48     	; 0x35e <main+0xc6>
		{
			interrupts_timer_main_ovf_dec++;
     32e:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <interrupts_timer_main_ovf_dec>
     332:	8f 5f       	subi	r24, 0xFF	; 255
     334:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <interrupts_timer_main_ovf_dec>
			main_ovf_ctr = interrupts_timer_main_ovf_dec+interrupts_timer_main_ovf_ctr;
     338:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <interrupts_timer_main_ovf_dec>
     33c:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <interrupts_timer_main_ovf_ctr>
     340:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     344:	82 0f       	add	r24, r18
     346:	91 1d       	adc	r25, r1
     348:	a0 e0       	ldi	r26, 0x00	; 0
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <main_ovf_ctr>
     350:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <main_ovf_ctr+0x1>
     354:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <main_ovf_ctr+0x2>
     358:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <main_ovf_ctr+0x3>
     35c:	19 c0       	rjmp	.+50     	; 0x390 <main+0xf8>
		}
		else
		{
			main_ovf_ctr = interrupts_timer_main_ovf_ctr;
     35e:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <interrupts_timer_main_ovf_ctr>
     362:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     366:	c9 01       	movw	r24, r18
     368:	a0 e0       	ldi	r26, 0x00	; 0
     36a:	b0 e0       	ldi	r27, 0x00	; 0
     36c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <main_ovf_ctr>
     370:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <main_ovf_ctr+0x1>
     374:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <main_ovf_ctr+0x2>
     378:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <main_ovf_ctr+0x3>
			interrupts_timer_main_ovf_ctr -= main_ovf_ctr;
     37c:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <interrupts_timer_main_ovf_ctr>
     380:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     384:	82 1b       	sub	r24, r18
     386:	93 0b       	sbc	r25, r19
     388:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <interrupts_timer_main_ovf_ctr+0x1>
     38c:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <interrupts_timer_main_ovf_ctr>
		}
		main_time_curr = (main_ovf_ctr*INTERRUPTS_TIMER_MAIN_OCR)+main_time_tick;
     390:	80 90 1c 01 	lds	r8, 0x011C	; 0x80011c <main_time_tick>
     394:	90 90 1d 01 	lds	r9, 0x011D	; 0x80011d <main_time_tick+0x1>
     398:	a1 2c       	mov	r10, r1
     39a:	b1 2c       	mov	r11, r1
		main_time_diff = main_time_curr - main_time_prev;
     39c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <main_ovf_ctr>
     3a0:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <main_ovf_ctr+0x1>
     3a4:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <main_ovf_ctr+0x2>
     3a8:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <main_ovf_ctr+0x3>
     3ac:	ba 2f       	mov	r27, r26
     3ae:	a9 2f       	mov	r26, r25
     3b0:	98 2f       	mov	r25, r24
     3b2:	88 27       	eor	r24, r24
     3b4:	88 0d       	add	r24, r8
     3b6:	99 1d       	adc	r25, r9
     3b8:	aa 1d       	adc	r26, r10
     3ba:	bb 1d       	adc	r27, r11
     3bc:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <main_time_prev>
     3c0:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <main_time_prev+0x1>
     3c4:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <main_time_prev+0x2>
     3c8:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <main_time_prev+0x3>
     3cc:	bc 01       	movw	r22, r24
     3ce:	cd 01       	movw	r24, r26
     3d0:	64 19       	sub	r22, r4
     3d2:	75 09       	sbc	r23, r5
     3d4:	86 09       	sbc	r24, r6
     3d6:	97 09       	sbc	r25, r7
     3d8:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <main_time_diff>
     3dc:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <main_time_diff+0x1>
     3e0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <main_time_diff+0x2>
     3e4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <main_time_diff+0x3>
		main_time_prev = main_time_tick;
     3e8:	80 92 14 01 	sts	0x0114, r8	; 0x800114 <main_time_prev>
     3ec:	90 92 15 01 	sts	0x0115, r9	; 0x800115 <main_time_prev+0x1>
     3f0:	a0 92 16 01 	sts	0x0116, r10	; 0x800116 <main_time_prev+0x2>
     3f4:	b0 92 17 01 	sts	0x0117, r11	; 0x800117 <main_time_prev+0x3>
	
		thumbwheel_read(main_time_diff);
     3f8:	0e 94 52 04 	call	0x8a4	; 0x8a4 <thumbwheel_read>
		switches_read(main_time_diff);		
     3fc:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <main_time_diff>
     400:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <main_time_diff+0x1>
     404:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <main_time_diff+0x2>
     408:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <main_time_diff+0x3>
     40c:	0e 94 16 06 	call	0xc2c	; 0xc2c <switches_read>
		if (CHECKBIT(flag_switch, flag_start))               //if start button is pressed
     410:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     414:	80 ff       	sbrs	r24, 0
     416:	a4 c1       	rjmp	.+840    	; 0x760 <__stack+0x261>
		{
			switch (flag_motor_1)
     418:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <flag_motor_1>
     41c:	82 30       	cpi	r24, 0x02	; 2
     41e:	09 f4       	brne	.+2      	; 0x422 <__DATA_REGION_LENGTH__+0x22>
     420:	6f c0       	rjmp	.+222    	; 0x500 <__stack+0x1>
     422:	30 f4       	brcc	.+12     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
     424:	88 23       	and	r24, r24
     426:	59 f0       	breq	.+22     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
     428:	81 30       	cpi	r24, 0x01	; 1
     42a:	09 f4       	brne	.+2      	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
     42c:	5f c0       	rjmp	.+190    	; 0x4ec <__DATA_REGION_LENGTH__+0xec>
     42e:	98 c1       	rjmp	.+816    	; 0x760 <__stack+0x261>
     430:	83 30       	cpi	r24, 0x03	; 3
     432:	09 f4       	brne	.+2      	; 0x436 <__DATA_REGION_LENGTH__+0x36>
     434:	e7 c0       	rjmp	.+462    	; 0x604 <__stack+0x105>
     436:	84 30       	cpi	r24, 0x04	; 4
     438:	09 f4       	brne	.+2      	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
     43a:	ec c0       	rjmp	.+472    	; 0x614 <__stack+0x115>
     43c:	91 c1       	rjmp	.+802    	; 0x760 <__stack+0x261>
			{
				case MOTOR_1_IDLE:
					if (!CHECKBIT(flag_switch, flag_param_saved))
     43e:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     442:	82 fd       	sbrc	r24, 2
     444:	03 c0       	rjmp	.+6      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
					{
						flag_motor_1 = MOTOR_1_PARAM_SET;
     446:	00 93 94 01 	sts	0x0194, r16	; 0x800194 <flag_motor_1>
     44a:	8a c1       	rjmp	.+788    	; 0x760 <__stack+0x261>
					}
					else
					{
						timer0_100ms+= main_time_diff;
     44c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     450:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     454:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     458:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     45c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <main_time_diff>
     460:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <main_time_diff+0x1>
     464:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <main_time_diff+0x2>
     468:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <main_time_diff+0x3>
     46c:	84 0f       	add	r24, r20
     46e:	95 1f       	adc	r25, r21
     470:	a6 1f       	adc	r26, r22
     472:	b7 1f       	adc	r27, r23
     474:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     478:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     47c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     480:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
						if (timer0_100ms >= dead_time_val*TIMER0_100MS*10)
     484:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     488:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     48c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     490:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     494:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
     498:	4b 01       	movw	r8, r22
     49a:	5c 01       	movw	r10, r24
     49c:	20 e0       	ldi	r18, 0x00	; 0
     49e:	30 e5       	ldi	r19, 0x50	; 80
     4a0:	43 e4       	ldi	r20, 0x43	; 67
     4a2:	58 e4       	ldi	r21, 0x48	; 72
     4a4:	60 91 71 01 	lds	r22, 0x0171	; 0x800171 <dead_time_val>
     4a8:	70 91 72 01 	lds	r23, 0x0172	; 0x800172 <dead_time_val+0x1>
     4ac:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <dead_time_val+0x2>
     4b0:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <dead_time_val+0x3>
     4b4:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	30 e0       	ldi	r19, 0x00	; 0
     4bc:	40 e2       	ldi	r20, 0x20	; 32
     4be:	51 e4       	ldi	r21, 0x41	; 65
     4c0:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
     4c4:	9b 01       	movw	r18, r22
     4c6:	ac 01       	movw	r20, r24
     4c8:	c5 01       	movw	r24, r10
     4ca:	b4 01       	movw	r22, r8
     4cc:	0e 94 56 0c 	call	0x18ac	; 0x18ac <__gesf2>
     4d0:	88 23       	and	r24, r24
     4d2:	0c f4       	brge	.+2      	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
     4d4:	45 c1       	rjmp	.+650    	; 0x760 <__stack+0x261>
						{
							timer0_100ms = 0;
     4d6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     4da:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4de:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     4e2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
							flag_motor_1 = MOTOR_1_ACCEL;
     4e6:	10 93 94 01 	sts	0x0194, r17	; 0x800194 <flag_motor_1>
     4ea:	3a c1       	rjmp	.+628    	; 0x760 <__stack+0x261>
						}
					}
					break;
				case MOTOR_1_PARAM_SET:
					motor_set_param();
     4ec:	0e 94 a6 06 	call	0xd4c	; 0xd4c <motor_set_param>
					SETBIT(flag_switch, flag_param_saved);
     4f0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     4f4:	84 60       	ori	r24, 0x04	; 4
     4f6:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
					//if ((cw_setcnt_val<=0) && (ccw_setcnt_val<=0))
					//{
						//motor_stop(main_time_diff);
					//}
					//else
					 flag_motor_1 = MOTOR_1_ACCEL;
     4fa:	10 93 94 01 	sts	0x0194, r17	; 0x800194 <flag_motor_1>
				break;
     4fe:	30 c1       	rjmp	.+608    	; 0x760 <__stack+0x261>
				case MOTOR_1_ACCEL:
					timer0_100ms+=main_time_diff;
     500:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     504:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     508:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     50c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     510:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <main_time_diff>
     514:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <main_time_diff+0x1>
     518:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <main_time_diff+0x2>
     51c:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <main_time_diff+0x3>
     520:	84 0f       	add	r24, r20
     522:	95 1f       	adc	r25, r21
     524:	a6 1f       	adc	r26, r22
     526:	b7 1f       	adc	r27, r23
     528:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     52c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     530:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     534:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
					if (timer0_100ms >= TIMER0_100MS)
     538:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     53c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     540:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     544:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     548:	80 34       	cpi	r24, 0x40	; 64
     54a:	9d 40       	sbci	r25, 0x0D	; 13
     54c:	a3 40       	sbci	r26, 0x03	; 3
     54e:	b1 05       	cpc	r27, r1
     550:	08 f4       	brcc	.+2      	; 0x554 <__stack+0x55>
     552:	06 c1       	rjmp	.+524    	; 0x760 <__stack+0x261>
					{
						timer0_100ms = 0;
     554:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     558:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     55c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     560:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
						motor_acceleration();
     564:	0e 94 a1 07 	call	0xf42	; 0xf42 <motor_acceleration>

						if ( (cw_pulse_ctr>=(cw_setcnt_val_temp*1000) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||
     568:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <cw_setcnt_val_temp>
     56c:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <cw_setcnt_val_temp+0x1>
     570:	40 91 44 01 	lds	r20, 0x0144	; 0x800144 <cw_setcnt_val_temp+0x2>
     574:	50 91 45 01 	lds	r21, 0x0145	; 0x800145 <cw_setcnt_val_temp+0x3>
     578:	80 90 0c 01 	lds	r8, 0x010C	; 0x80010c <cw_pulse_ctr>
     57c:	90 90 0d 01 	lds	r9, 0x010D	; 0x80010d <cw_pulse_ctr+0x1>
     580:	a0 90 0e 01 	lds	r10, 0x010E	; 0x80010e <cw_pulse_ctr+0x2>
     584:	b0 90 0f 01 	lds	r11, 0x010F	; 0x80010f <cw_pulse_ctr+0x3>
     588:	a8 ee       	ldi	r26, 0xE8	; 232
     58a:	b3 e0       	ldi	r27, 0x03	; 3
     58c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     590:	86 16       	cp	r8, r22
     592:	97 06       	cpc	r9, r23
     594:	a8 06       	cpc	r10, r24
     596:	b9 06       	cpc	r11, r25
     598:	20 f0       	brcs	.+8      	; 0x5a2 <__stack+0xa3>
     59a:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     59e:	80 fd       	sbrc	r24, 0
     5a0:	1e c0       	rjmp	.+60     	; 0x5de <__stack+0xdf>
						(ccw_pulse_ctr>=(ccw_setcnt_val_temp*1000) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)))
     5a2:	20 91 49 01 	lds	r18, 0x0149	; 0x800149 <ccw_setcnt_val_temp>
     5a6:	30 91 4a 01 	lds	r19, 0x014A	; 0x80014a <ccw_setcnt_val_temp+0x1>
     5aa:	40 91 4b 01 	lds	r20, 0x014B	; 0x80014b <ccw_setcnt_val_temp+0x2>
     5ae:	50 91 4c 01 	lds	r21, 0x014C	; 0x80014c <ccw_setcnt_val_temp+0x3>
     5b2:	80 90 08 01 	lds	r8, 0x0108	; 0x800108 <ccw_pulse_ctr>
     5b6:	90 90 09 01 	lds	r9, 0x0109	; 0x800109 <ccw_pulse_ctr+0x1>
     5ba:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <ccw_pulse_ctr+0x2>
     5be:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <ccw_pulse_ctr+0x3>
					if (timer0_100ms >= TIMER0_100MS)
					{
						timer0_100ms = 0;
						motor_acceleration();

						if ( (cw_pulse_ctr>=(cw_setcnt_val_temp*1000) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||
     5c2:	a8 ee       	ldi	r26, 0xE8	; 232
     5c4:	b3 e0       	ldi	r27, 0x03	; 3
     5c6:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     5ca:	86 16       	cp	r8, r22
     5cc:	97 06       	cpc	r9, r23
     5ce:	a8 06       	cpc	r10, r24
     5d0:	b9 06       	cpc	r11, r25
     5d2:	08 f4       	brcc	.+2      	; 0x5d6 <__stack+0xd7>
     5d4:	c5 c0       	rjmp	.+394    	; 0x760 <__stack+0x261>
						(ccw_pulse_ctr>=(ccw_setcnt_val_temp*1000) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)))
     5d6:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     5da:	80 fd       	sbrc	r24, 0
     5dc:	c1 c0       	rjmp	.+386    	; 0x760 <__stack+0x261>
						{
							SETBIT(flag_switch, flag_stop);
     5de:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     5e2:	82 60       	ori	r24, 0x02	; 2
     5e4:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
							CLEARBIT(flag_switch, flag_start);
     5e8:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     5ec:	8e 7f       	andi	r24, 0xFE	; 254
     5ee:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
							cyccnt_ctr=0;
     5f2:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <cyccnt_ctr>
     5f6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <cyccnt_ctr+0x1>
     5fa:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <cyccnt_ctr+0x2>
     5fe:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <cyccnt_ctr+0x3>
     602:	ae c0       	rjmp	.+348    	; 0x760 <__stack+0x261>
						}

					}
				break;
				case MOTOR_1_OPRTNG_SPD:
					if (motor_operating_spd())
     604:	0e 94 84 08 	call	0x1108	; 0x1108 <motor_operating_spd>
     608:	89 2b       	or	r24, r25
     60a:	09 f4       	brne	.+2      	; 0x60e <__stack+0x10f>
     60c:	a9 c0       	rjmp	.+338    	; 0x760 <__stack+0x261>
					{
						flag_motor_1 = MOTOR_1_DECEL;
     60e:	f0 92 94 01 	sts	0x0194, r15	; 0x800194 <flag_motor_1>
     612:	a6 c0       	rjmp	.+332    	; 0x760 <__stack+0x261>
					}
				break;
				case MOTOR_1_DECEL:
					timer0_100ms+=main_time_diff;
     614:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     618:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     61c:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     620:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     624:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <main_time_diff>
     628:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <main_time_diff+0x1>
     62c:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <main_time_diff+0x2>
     630:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <main_time_diff+0x3>
     634:	84 0f       	add	r24, r20
     636:	95 1f       	adc	r25, r21
     638:	a6 1f       	adc	r26, r22
     63a:	b7 1f       	adc	r27, r23
     63c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     640:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     644:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     648:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
					if (timer0_100ms >= TIMER0_100MS)
     64c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     650:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     654:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     658:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     65c:	80 34       	cpi	r24, 0x40	; 64
     65e:	9d 40       	sbci	r25, 0x0D	; 13
     660:	a3 40       	sbci	r26, 0x03	; 3
     662:	b1 05       	cpc	r27, r1
     664:	08 f4       	brcc	.+2      	; 0x668 <__stack+0x169>
     666:	7c c0       	rjmp	.+248    	; 0x760 <__stack+0x261>
					{
						timer0_100ms = 0;
     668:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     66c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     670:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     674:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
						motor_deceleration();
     678:	0e 94 9b 09 	call	0x1336	; 0x1336 <motor_deceleration>
						if(!CHECKBIT(TCCR1B, CS11)) // if timer is stopped
     67c:	88 81       	ld	r24, Y
     67e:	81 fd       	sbrc	r24, 1
     680:	6f c0       	rjmp	.+222    	; 0x760 <__stack+0x261>
						{
							flag_motor_1=MOTOR_1_IDLE;
     682:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <flag_motor_1>
							cw_pulse_ctr = 0;
     686:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <cw_pulse_ctr>
     68a:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <cw_pulse_ctr+0x1>
     68e:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <cw_pulse_ctr+0x2>
     692:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <cw_pulse_ctr+0x3>
							ccw_pulse_ctr = 0;
     696:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <ccw_pulse_ctr>
     69a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <ccw_pulse_ctr+0x1>
     69e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <ccw_pulse_ctr+0x2>
     6a2:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ccw_pulse_ctr+0x3>
							rev_count_inc = 0;
     6a6:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <rev_count_inc>
     6aa:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <rev_count_inc+0x1>
     6ae:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <rev_count_inc+0x2>
     6b2:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <rev_count_inc+0x3>
							ramp_OCR1A = 0;
     6b6:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <ramp_OCR1A>
     6ba:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <ramp_OCR1A+0x1>
     6be:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <ramp_OCR1A+0x2>
     6c2:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <ramp_OCR1A+0x3>
							if (!CHECKBIT(flag_motor2, MOTOR_2_DIR_CW))
     6c6:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     6ca:	80 fd       	sbrc	r24, 0
     6cc:	44 c0       	rjmp	.+136    	; 0x756 <__stack+0x257>
							{
								cyccnt_ctr++;
     6ce:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <cyccnt_ctr>
     6d2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <cyccnt_ctr+0x1>
     6d6:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <cyccnt_ctr+0x2>
     6da:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <cyccnt_ctr+0x3>
     6de:	01 96       	adiw	r24, 0x01	; 1
     6e0:	a1 1d       	adc	r26, r1
     6e2:	b1 1d       	adc	r27, r1
     6e4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <cyccnt_ctr>
     6e8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <cyccnt_ctr+0x1>
     6ec:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <cyccnt_ctr+0x2>
     6f0:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <cyccnt_ctr+0x3>
								if (cyccnt_ctr>= cyc_cnt_val)
     6f4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <cyccnt_ctr>
     6f8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <cyccnt_ctr+0x1>
     6fc:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <cyccnt_ctr+0x2>
     700:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <cyccnt_ctr+0x3>
     704:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <cyc_cnt_val>
     708:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <cyc_cnt_val+0x1>
     70c:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <cyc_cnt_val+0x2>
     710:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <cyc_cnt_val+0x3>
     714:	48 17       	cp	r20, r24
     716:	59 07       	cpc	r21, r25
     718:	6a 07       	cpc	r22, r26
     71a:	7b 07       	cpc	r23, r27
     71c:	e0 f0       	brcs	.+56     	; 0x756 <__stack+0x257>
								{
									cyccnt_ctr=0;
     71e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <cyccnt_ctr>
     722:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <cyccnt_ctr+0x1>
     726:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <cyccnt_ctr+0x2>
     72a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <cyccnt_ctr+0x3>
									SETBIT(flag_switch, flag_stop);
     72e:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     732:	82 60       	ori	r24, 0x02	; 2
     734:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
									CLEARBIT(flag_switch, flag_start);
     738:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     73c:	8e 7f       	andi	r24, 0xFE	; 254
     73e:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
									CLEARBIT(flag_switch, flag_param_saved);
     742:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     746:	8b 7f       	andi	r24, 0xFB	; 251
     748:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
									SETBIT(flag_motor2, MOTOR_2_DIR_CW);
     74c:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     750:	81 60       	ori	r24, 0x01	; 1
     752:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <flag_motor2>
								}
							}
							FLIPBIT(flag_motor2, MOTOR_2_DIR_CW);
     756:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     75a:	8e 25       	eor	r24, r14
     75c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <flag_motor2>
			}
		}
		
		
		
		if (CHECKBIT(flag_switch, flag_stop))		//if stop button is pressed
     760:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     764:	81 ff       	sbrs	r24, 1
     766:	c6 cd       	rjmp	.-1140   	; 0x2f4 <main+0x5c>
		{
			if (flag_motor_1 != MOTOR_1_IDLE)
     768:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <flag_motor_1>
     76c:	88 23       	and	r24, r24
     76e:	a9 f1       	breq	.+106    	; 0x7da <__stack+0x2db>
			{
				timer0_100ms += main_time_diff;
     770:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     774:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     778:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     77c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     780:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <main_time_diff>
     784:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <main_time_diff+0x1>
     788:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <main_time_diff+0x2>
     78c:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <main_time_diff+0x3>
     790:	84 0f       	add	r24, r20
     792:	95 1f       	adc	r25, r21
     794:	a6 1f       	adc	r26, r22
     796:	b7 1f       	adc	r27, r23
     798:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     79c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7a0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     7a4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
				if (timer0_100ms >= TIMER0_100MS)
     7a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7ac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7b0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     7b4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     7b8:	80 34       	cpi	r24, 0x40	; 64
     7ba:	9d 40       	sbci	r25, 0x0D	; 13
     7bc:	a3 40       	sbci	r26, 0x03	; 3
     7be:	b1 05       	cpc	r27, r1
     7c0:	08 f4       	brcc	.+2      	; 0x7c4 <__stack+0x2c5>
     7c2:	98 cd       	rjmp	.-1232   	; 0x2f4 <main+0x5c>
				{
					timer0_100ms = 0;
     7c4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     7c8:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7cc:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     7d0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
					motor_deceleration();
     7d4:	0e 94 9b 09 	call	0x1336	; 0x1336 <motor_deceleration>
     7d8:	8d cd       	rjmp	.-1254   	; 0x2f4 <main+0x5c>
				}
			}
			else
			{
				cw_pulse_ctr = 0;
     7da:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <cw_pulse_ctr>
     7de:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <cw_pulse_ctr+0x1>
     7e2:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <cw_pulse_ctr+0x2>
     7e6:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <cw_pulse_ctr+0x3>
				ccw_pulse_ctr = 0;
     7ea:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <ccw_pulse_ctr>
     7ee:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <ccw_pulse_ctr+0x1>
     7f2:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <ccw_pulse_ctr+0x2>
     7f6:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ccw_pulse_ctr+0x3>
				rev_count_inc = 0;
     7fa:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <rev_count_inc>
     7fe:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <rev_count_inc+0x1>
     802:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <rev_count_inc+0x2>
     806:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <rev_count_inc+0x3>
				ramp_OCR1A = 0;
     80a:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <ramp_OCR1A>
     80e:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <ramp_OCR1A+0x1>
     812:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <ramp_OCR1A+0x2>
     816:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <ramp_OCR1A+0x3>
				cyccnt_ctr=0;
     81a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <cyccnt_ctr>
     81e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <cyccnt_ctr+0x1>
     822:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <cyccnt_ctr+0x2>
     826:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <cyccnt_ctr+0x3>
				WRITELOW(cw_port);
     82a:	2d 98       	cbi	0x05, 5	; 5
				WRITELOW(ccw_port);
     82c:	2e 98       	cbi	0x05, 6	; 5
				SETBIT(flag_motor2, MOTOR_2_DIR_CW);
     82e:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     832:	81 60       	ori	r24, 0x01	; 1
     834:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <flag_motor2>
				CLEARBIT(flag_switch, flag_param_saved);
     838:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     83c:	8b 7f       	andi	r24, 0xFB	; 251
     83e:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
     842:	58 cd       	rjmp	.-1360   	; 0x2f4 <main+0x5c>

00000844 <_exp>:
uint32_t delay_ctr=0;

uint32_t _exp(uint8_t foo)
{
	uint32_t result=0;
	switch (foo)
     844:	82 30       	cpi	r24, 0x02	; 2
     846:	b1 f0       	breq	.+44     	; 0x874 <_exp+0x30>
     848:	28 f4       	brcc	.+10     	; 0x854 <_exp+0x10>
     84a:	88 23       	and	r24, r24
     84c:	49 f0       	breq	.+18     	; 0x860 <_exp+0x1c>
     84e:	81 30       	cpi	r24, 0x01	; 1
     850:	61 f0       	breq	.+24     	; 0x86a <_exp+0x26>
     852:	24 c0       	rjmp	.+72     	; 0x89c <_exp+0x58>
     854:	84 30       	cpi	r24, 0x04	; 4
     856:	c1 f0       	breq	.+48     	; 0x888 <_exp+0x44>
     858:	90 f0       	brcs	.+36     	; 0x87e <_exp+0x3a>
     85a:	85 30       	cpi	r24, 0x05	; 5
     85c:	d1 f0       	breq	.+52     	; 0x892 <_exp+0x4e>
     85e:	1e c0       	rjmp	.+60     	; 0x89c <_exp+0x58>
	{
		case 0:
		result = 1;
     860:	61 e0       	ldi	r22, 0x01	; 1
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	08 95       	ret
		break;
		case 1:
		result = 10;
     86a:	6a e0       	ldi	r22, 0x0A	; 10
     86c:	70 e0       	ldi	r23, 0x00	; 0
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	90 e0       	ldi	r25, 0x00	; 0
		break;
     872:	08 95       	ret
		case 2:
		result = 100;
     874:	64 e6       	ldi	r22, 0x64	; 100
     876:	70 e0       	ldi	r23, 0x00	; 0
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	90 e0       	ldi	r25, 0x00	; 0
		break;
     87c:	08 95       	ret
		case 3:
		result = 1000;
     87e:	68 ee       	ldi	r22, 0xE8	; 232
     880:	73 e0       	ldi	r23, 0x03	; 3
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	90 e0       	ldi	r25, 0x00	; 0
		break;
     886:	08 95       	ret
		case 4:
		result = 10000;
     888:	60 e1       	ldi	r22, 0x10	; 16
     88a:	77 e2       	ldi	r23, 0x27	; 39
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	90 e0       	ldi	r25, 0x00	; 0
		break;
     890:	08 95       	ret
		case 5:
		result = 100000;
     892:	60 ea       	ldi	r22, 0xA0	; 160
     894:	76 e8       	ldi	r23, 0x86	; 134
     896:	81 e0       	ldi	r24, 0x01	; 1
     898:	90 e0       	ldi	r25, 0x00	; 0
		break;	
     89a:	08 95       	ret
uint32_t thumbw_deb_ctr=0;
uint32_t delay_ctr=0;

uint32_t _exp(uint8_t foo)
{
	uint32_t result=0;
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	cb 01       	movw	r24, r22
		case 5:
		result = 100000;
		break;	
	}
	return result; 
}
     8a2:	08 95       	ret

000008a4 <thumbwheel_read>:

void thumbwheel_read(uint32_t lapsed_time)
{
     8a4:	4f 92       	push	r4
     8a6:	5f 92       	push	r5
     8a8:	6f 92       	push	r6
     8aa:	7f 92       	push	r7
     8ac:	8f 92       	push	r8
     8ae:	9f 92       	push	r9
     8b0:	af 92       	push	r10
     8b2:	bf 92       	push	r11
     8b4:	cf 92       	push	r12
     8b6:	df 92       	push	r13
     8b8:	ef 92       	push	r14
     8ba:	ff 92       	push	r15
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
	if (CHECKBIT(flag_switch,flag_stop))
     8c2:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     8c6:	21 ff       	sbrs	r18, 1
     8c8:	a1 c1       	rjmp	.+834    	; 0xc0c <thumbwheel_read+0x368>
	{
		thumbw_deb_ctr += lapsed_time;
     8ca:	c0 90 2a 01 	lds	r12, 0x012A	; 0x80012a <thumbw_deb_ctr>
     8ce:	d0 90 2b 01 	lds	r13, 0x012B	; 0x80012b <thumbw_deb_ctr+0x1>
     8d2:	e0 90 2c 01 	lds	r14, 0x012C	; 0x80012c <thumbw_deb_ctr+0x2>
     8d6:	f0 90 2d 01 	lds	r15, 0x012D	; 0x80012d <thumbw_deb_ctr+0x3>
     8da:	dc 01       	movw	r26, r24
     8dc:	cb 01       	movw	r24, r22
     8de:	8c 0d       	add	r24, r12
     8e0:	9d 1d       	adc	r25, r13
     8e2:	ae 1d       	adc	r26, r14
     8e4:	bf 1d       	adc	r27, r15
		if (thumbw_deb_ctr >= THUMBW_DEB)
     8e6:	80 32       	cpi	r24, 0x20	; 32
     8e8:	2e e4       	ldi	r18, 0x4E	; 78
     8ea:	92 07       	cpc	r25, r18
     8ec:	a1 05       	cpc	r26, r1
     8ee:	b1 05       	cpc	r27, r1
     8f0:	48 f4       	brcc	.+18     	; 0x904 <thumbwheel_read+0x60>

void thumbwheel_read(uint32_t lapsed_time)
{
	if (CHECKBIT(flag_switch,flag_stop))
	{
		thumbw_deb_ctr += lapsed_time;
     8f2:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <thumbw_deb_ctr>
     8f6:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <thumbw_deb_ctr+0x1>
     8fa:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <thumbw_deb_ctr+0x2>
     8fe:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <thumbw_deb_ctr+0x3>
     902:	84 c1       	rjmp	.+776    	; 0xc0c <thumbwheel_read+0x368>
		if (thumbw_deb_ctr >= THUMBW_DEB)
		{
			thumbw_deb_ctr = 0;
     904:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <thumbw_deb_ctr>
     908:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <thumbw_deb_ctr+0x1>
     90c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <thumbw_deb_ctr+0x2>
     910:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <thumbw_deb_ctr+0x3>
			if (ctr1<8)
     914:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <ctr1>
     918:	88 30       	cpi	r24, 0x08	; 8
     91a:	08 f0       	brcs	.+2      	; 0x91e <thumbwheel_read+0x7a>
     91c:	49 c0       	rjmp	.+146    	; 0x9b0 <thumbwheel_read+0x10c>
			{
				PORTD = 0xff;
     91e:	3f ef       	ldi	r19, 0xFF	; 255
     920:	3b b9       	out	0x0b, r19	; 11
				CLEARBIT(PORTD,ctr1);
     922:	2b b1       	in	r18, 0x0b	; 11
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	00 90 2f 01 	lds	r0, 0x012F	; 0x80012f <ctr1>
     92c:	02 c0       	rjmp	.+4      	; 0x932 <thumbwheel_read+0x8e>
     92e:	88 0f       	add	r24, r24
     930:	99 1f       	adc	r25, r25
     932:	0a 94       	dec	r0
     934:	e2 f7       	brpl	.-8      	; 0x92e <thumbwheel_read+0x8a>
     936:	80 95       	com	r24
     938:	82 23       	and	r24, r18
     93a:	8b b9       	out	0x0b, r24	; 11
				PORTC = 0xff;
     93c:	38 b9       	out	0x08, r19	; 8
				delay_ctr++;
     93e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <delay_ctr>
     942:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <delay_ctr+0x1>
     946:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <delay_ctr+0x2>
     94a:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <delay_ctr+0x3>
     94e:	01 96       	adiw	r24, 0x01	; 1
     950:	a1 1d       	adc	r26, r1
     952:	b1 1d       	adc	r27, r1
				if (delay_ctr>=2)
     954:	82 30       	cpi	r24, 0x02	; 2
     956:	91 05       	cpc	r25, r1
     958:	a1 05       	cpc	r26, r1
     95a:	b1 05       	cpc	r27, r1
     95c:	48 f4       	brcc	.+18     	; 0x970 <thumbwheel_read+0xcc>
			if (ctr1<8)
			{
				PORTD = 0xff;
				CLEARBIT(PORTD,ctr1);
				PORTC = 0xff;
				delay_ctr++;
     95e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <delay_ctr>
     962:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <delay_ctr+0x1>
     966:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <delay_ctr+0x2>
     96a:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <delay_ctr+0x3>
     96e:	4e c1       	rjmp	.+668    	; 0xc0c <thumbwheel_read+0x368>
				if (delay_ctr>=2)
				{
					delay_ctr=0;
     970:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <delay_ctr>
     974:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <delay_ctr+0x1>
     978:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <delay_ctr+0x2>
     97c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <delay_ctr+0x3>
					BCD_val = ~PINA;
     980:	80 b1       	in	r24, 0x00	; 0
     982:	80 95       	com	r24
     984:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <BCD_val>
					BCD_VAL_A[ctr1] = BCD_val & 0x0f;
     988:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <ctr1>
     98c:	29 2f       	mov	r18, r25
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	f9 01       	movw	r30, r18
     992:	eb 58       	subi	r30, 0x8B	; 139
     994:	fe 4f       	sbci	r31, 0xFE	; 254
     996:	48 2f       	mov	r20, r24
     998:	4f 70       	andi	r20, 0x0F	; 15
     99a:	40 83       	st	Z, r20
					BCD_VAL_B[ctr1] = (BCD_val>>4);
     99c:	f9 01       	movw	r30, r18
     99e:	e0 58       	subi	r30, 0x80	; 128
     9a0:	fe 4f       	sbci	r31, 0xFE	; 254
     9a2:	82 95       	swap	r24
     9a4:	8f 70       	andi	r24, 0x0F	; 15
     9a6:	80 83       	st	Z, r24
					ctr1++;
     9a8:	9f 5f       	subi	r25, 0xFF	; 255
     9aa:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <ctr1>
     9ae:	2e c1       	rjmp	.+604    	; 0xc0c <thumbwheel_read+0x368>
				}
			
			}
			else if (ctr2 < 3)
     9b0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <ctr2>
     9b4:	83 30       	cpi	r24, 0x03	; 3
     9b6:	08 f0       	brcs	.+2      	; 0x9ba <thumbwheel_read+0x116>
     9b8:	4d c0       	rjmp	.+154    	; 0xa54 <thumbwheel_read+0x1b0>
			{
				PORTC = 0xff;
     9ba:	3f ef       	ldi	r19, 0xFF	; 255
     9bc:	38 b9       	out	0x08, r19	; 8
				CLEARBIT(PORTC,ctr2);
     9be:	28 b1       	in	r18, 0x08	; 8
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	00 90 2e 01 	lds	r0, 0x012E	; 0x80012e <ctr2>
     9c8:	02 c0       	rjmp	.+4      	; 0x9ce <thumbwheel_read+0x12a>
     9ca:	88 0f       	add	r24, r24
     9cc:	99 1f       	adc	r25, r25
     9ce:	0a 94       	dec	r0
     9d0:	e2 f7       	brpl	.-8      	; 0x9ca <thumbwheel_read+0x126>
     9d2:	80 95       	com	r24
     9d4:	82 23       	and	r24, r18
     9d6:	88 b9       	out	0x08, r24	; 8
				PORTD = 0xff;
     9d8:	3b b9       	out	0x0b, r19	; 11
				delay_ctr++;
     9da:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <delay_ctr>
     9de:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <delay_ctr+0x1>
     9e2:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <delay_ctr+0x2>
     9e6:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <delay_ctr+0x3>
     9ea:	01 96       	adiw	r24, 0x01	; 1
     9ec:	a1 1d       	adc	r26, r1
     9ee:	b1 1d       	adc	r27, r1
				if (delay_ctr>=2)
     9f0:	82 30       	cpi	r24, 0x02	; 2
     9f2:	91 05       	cpc	r25, r1
     9f4:	a1 05       	cpc	r26, r1
     9f6:	b1 05       	cpc	r27, r1
     9f8:	48 f4       	brcc	.+18     	; 0xa0c <thumbwheel_read+0x168>
			else if (ctr2 < 3)
			{
				PORTC = 0xff;
				CLEARBIT(PORTC,ctr2);
				PORTD = 0xff;
				delay_ctr++;
     9fa:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <delay_ctr>
     9fe:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <delay_ctr+0x1>
     a02:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <delay_ctr+0x2>
     a06:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <delay_ctr+0x3>
     a0a:	00 c1       	rjmp	.+512    	; 0xc0c <thumbwheel_read+0x368>
				if (delay_ctr>=2)
				{
					delay_ctr=0;
     a0c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <delay_ctr>
     a10:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <delay_ctr+0x1>
     a14:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <delay_ctr+0x2>
     a18:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <delay_ctr+0x3>
					BCD_val = ~PINA;
     a1c:	80 b1       	in	r24, 0x00	; 0
     a1e:	80 95       	com	r24
     a20:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <BCD_val>
					BCD_VAL_A[ctr1+ctr2] = BCD_val & 0x0f;
     a24:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <ctr2>
     a28:	40 91 2f 01 	lds	r20, 0x012F	; 0x80012f <ctr1>
     a2c:	29 2f       	mov	r18, r25
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	24 0f       	add	r18, r20
     a32:	31 1d       	adc	r19, r1
     a34:	f9 01       	movw	r30, r18
     a36:	eb 58       	subi	r30, 0x8B	; 139
     a38:	fe 4f       	sbci	r31, 0xFE	; 254
     a3a:	48 2f       	mov	r20, r24
     a3c:	4f 70       	andi	r20, 0x0F	; 15
     a3e:	40 83       	st	Z, r20
					BCD_VAL_B[ctr1+ctr2] = (BCD_val>>4);
     a40:	f9 01       	movw	r30, r18
     a42:	e0 58       	subi	r30, 0x80	; 128
     a44:	fe 4f       	sbci	r31, 0xFE	; 254
     a46:	82 95       	swap	r24
     a48:	8f 70       	andi	r24, 0x0F	; 15
     a4a:	80 83       	st	Z, r24
					ctr2++;
     a4c:	9f 5f       	subi	r25, 0xFF	; 255
     a4e:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <ctr2>
     a52:	dc c0       	rjmp	.+440    	; 0xc0c <thumbwheel_read+0x368>
				}
			}
			else
			{
				ctr1=0;
     a54:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <ctr1>
				ctr2=0;
     a58:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <ctr2>
				CLEARBIT(flag_switch, MOTOR_1_PARAM_SET);
     a5c:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     a60:	8d 7f       	andi	r24, 0xFD	; 253
     a62:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
				op_spd_val_temp = 0;
     a66:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <op_spd_val_temp>
     a6a:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <op_spd_val_temp+0x1>
     a6e:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <op_spd_val_temp+0x2>
     a72:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <op_spd_val_temp+0x3>
				cw_setcnt_val_temp = 0;
     a76:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <cw_setcnt_val_temp>
     a7a:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <cw_setcnt_val_temp+0x1>
     a7e:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <cw_setcnt_val_temp+0x2>
     a82:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <cw_setcnt_val_temp+0x3>
				ccw_setcnt_val_temp = 0;
     a86:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <ccw_setcnt_val_temp>
     a8a:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <ccw_setcnt_val_temp+0x1>
     a8e:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <ccw_setcnt_val_temp+0x2>
     a92:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <ccw_setcnt_val_temp+0x3>
				cyc_cnt_val_temp = 0;
     a96:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <cyc_cnt_val_temp>
     a9a:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <cyc_cnt_val_temp+0x1>
     a9e:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <cyc_cnt_val_temp+0x2>
     aa2:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <cyc_cnt_val_temp+0x3>
     aa6:	0f 2e       	mov	r0, r31
     aa8:	f5 e7       	ldi	r31, 0x75	; 117
     aaa:	cf 2e       	mov	r12, r31
     aac:	f1 e0       	ldi	r31, 0x01	; 1
     aae:	df 2e       	mov	r13, r31
     ab0:	f0 2d       	mov	r31, r0
     ab2:	0f 2e       	mov	r0, r31
     ab4:	f0 e8       	ldi	r31, 0x80	; 128
     ab6:	ef 2e       	mov	r14, r31
     ab8:	f1 e0       	ldi	r31, 0x01	; 1
     aba:	ff 2e       	mov	r15, r31
     abc:	f0 2d       	mov	r31, r0
     abe:	1b ef       	ldi	r17, 0xFB	; 251
				for (int foo=0; foo<=11; foo++)
     ac0:	c0 e0       	ldi	r28, 0x00	; 0
     ac2:	d0 e0       	ldi	r29, 0x00	; 0
				{
					if (foo<=4)
     ac4:	c5 30       	cpi	r28, 0x05	; 5
     ac6:	d1 05       	cpc	r29, r1
     ac8:	c4 f5       	brge	.+112    	; 0xb3a <thumbwheel_read+0x296>
					{
						op_spd_val_temp += (BCD_VAL_A[foo])*(_exp(foo));
     aca:	8c 2f       	mov	r24, r28
     acc:	0e 94 22 04 	call	0x844	; 0x844 <_exp>
     ad0:	80 90 4e 01 	lds	r8, 0x014E	; 0x80014e <op_spd_val_temp>
     ad4:	90 90 4f 01 	lds	r9, 0x014F	; 0x80014f <op_spd_val_temp+0x1>
     ad8:	a0 90 50 01 	lds	r10, 0x0150	; 0x800150 <op_spd_val_temp+0x2>
     adc:	b0 90 51 01 	lds	r11, 0x0151	; 0x800151 <op_spd_val_temp+0x3>
     ae0:	f6 01       	movw	r30, r12
     ae2:	a0 81       	ld	r26, Z
     ae4:	b0 e0       	ldi	r27, 0x00	; 0
     ae6:	9b 01       	movw	r18, r22
     ae8:	ac 01       	movw	r20, r24
     aea:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     aee:	86 0e       	add	r8, r22
     af0:	97 1e       	adc	r9, r23
     af2:	a8 1e       	adc	r10, r24
     af4:	b9 1e       	adc	r11, r25
     af6:	80 92 4e 01 	sts	0x014E, r8	; 0x80014e <op_spd_val_temp>
     afa:	90 92 4f 01 	sts	0x014F, r9	; 0x80014f <op_spd_val_temp+0x1>
     afe:	a0 92 50 01 	sts	0x0150, r10	; 0x800150 <op_spd_val_temp+0x2>
     b02:	b0 92 51 01 	sts	0x0151, r11	; 0x800151 <op_spd_val_temp+0x3>
						ccw_setcnt_val_temp += (BCD_VAL_B[foo])*(_exp(foo));
     b06:	80 90 49 01 	lds	r8, 0x0149	; 0x800149 <ccw_setcnt_val_temp>
     b0a:	90 90 4a 01 	lds	r9, 0x014A	; 0x80014a <ccw_setcnt_val_temp+0x1>
     b0e:	a0 90 4b 01 	lds	r10, 0x014B	; 0x80014b <ccw_setcnt_val_temp+0x2>
     b12:	b0 90 4c 01 	lds	r11, 0x014C	; 0x80014c <ccw_setcnt_val_temp+0x3>
     b16:	f7 01       	movw	r30, r14
     b18:	a0 81       	ld	r26, Z
     b1a:	b0 e0       	ldi	r27, 0x00	; 0
     b1c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     b20:	86 0e       	add	r8, r22
     b22:	97 1e       	adc	r9, r23
     b24:	a8 1e       	adc	r10, r24
     b26:	b9 1e       	adc	r11, r25
     b28:	80 92 49 01 	sts	0x0149, r8	; 0x800149 <ccw_setcnt_val_temp>
     b2c:	90 92 4a 01 	sts	0x014A, r9	; 0x80014a <ccw_setcnt_val_temp+0x1>
     b30:	a0 92 4b 01 	sts	0x014B, r10	; 0x80014b <ccw_setcnt_val_temp+0x2>
     b34:	b0 92 4c 01 	sts	0x014C, r11	; 0x80014c <ccw_setcnt_val_temp+0x3>
     b38:	59 c0       	rjmp	.+178    	; 0xbec <thumbwheel_read+0x348>
					}
					else
					{
						if (foo<=9)
     b3a:	ca 30       	cpi	r28, 0x0A	; 10
     b3c:	d1 05       	cpc	r29, r1
     b3e:	c4 f5       	brge	.+112    	; 0xbb0 <thumbwheel_read+0x30c>
						{
							cw_setcnt_val_temp += (BCD_VAL_A[foo])*(_exp(foo-5));
     b40:	81 2f       	mov	r24, r17
     b42:	0e 94 22 04 	call	0x844	; 0x844 <_exp>
     b46:	80 90 42 01 	lds	r8, 0x0142	; 0x800142 <cw_setcnt_val_temp>
     b4a:	90 90 43 01 	lds	r9, 0x0143	; 0x800143 <cw_setcnt_val_temp+0x1>
     b4e:	a0 90 44 01 	lds	r10, 0x0144	; 0x800144 <cw_setcnt_val_temp+0x2>
     b52:	b0 90 45 01 	lds	r11, 0x0145	; 0x800145 <cw_setcnt_val_temp+0x3>
     b56:	f6 01       	movw	r30, r12
     b58:	a0 81       	ld	r26, Z
     b5a:	b0 e0       	ldi	r27, 0x00	; 0
     b5c:	9b 01       	movw	r18, r22
     b5e:	ac 01       	movw	r20, r24
     b60:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     b64:	86 0e       	add	r8, r22
     b66:	97 1e       	adc	r9, r23
     b68:	a8 1e       	adc	r10, r24
     b6a:	b9 1e       	adc	r11, r25
     b6c:	80 92 42 01 	sts	0x0142, r8	; 0x800142 <cw_setcnt_val_temp>
     b70:	90 92 43 01 	sts	0x0143, r9	; 0x800143 <cw_setcnt_val_temp+0x1>
     b74:	a0 92 44 01 	sts	0x0144, r10	; 0x800144 <cw_setcnt_val_temp+0x2>
     b78:	b0 92 45 01 	sts	0x0145, r11	; 0x800145 <cw_setcnt_val_temp+0x3>
							cyc_cnt_val_temp += (BCD_VAL_B[foo])*(_exp(foo-5));
     b7c:	80 90 52 01 	lds	r8, 0x0152	; 0x800152 <cyc_cnt_val_temp>
     b80:	90 90 53 01 	lds	r9, 0x0153	; 0x800153 <cyc_cnt_val_temp+0x1>
     b84:	a0 90 54 01 	lds	r10, 0x0154	; 0x800154 <cyc_cnt_val_temp+0x2>
     b88:	b0 90 55 01 	lds	r11, 0x0155	; 0x800155 <cyc_cnt_val_temp+0x3>
     b8c:	f7 01       	movw	r30, r14
     b8e:	a0 81       	ld	r26, Z
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     b96:	86 0e       	add	r8, r22
     b98:	97 1e       	adc	r9, r23
     b9a:	a8 1e       	adc	r10, r24
     b9c:	b9 1e       	adc	r11, r25
     b9e:	80 92 52 01 	sts	0x0152, r8	; 0x800152 <cyc_cnt_val_temp>
     ba2:	90 92 53 01 	sts	0x0153, r9	; 0x800153 <cyc_cnt_val_temp+0x1>
     ba6:	a0 92 54 01 	sts	0x0154, r10	; 0x800154 <cyc_cnt_val_temp+0x2>
     baa:	b0 92 55 01 	sts	0x0155, r11	; 0x800155 <cyc_cnt_val_temp+0x3>
     bae:	1e c0       	rjmp	.+60     	; 0xbec <thumbwheel_read+0x348>
						}
						else
						cyc_cnt_val_temp += (BCD_VAL_B[foo])*(_exp(foo-5));
     bb0:	81 2f       	mov	r24, r17
     bb2:	0e 94 22 04 	call	0x844	; 0x844 <_exp>
     bb6:	9b 01       	movw	r18, r22
     bb8:	ac 01       	movw	r20, r24
     bba:	80 90 52 01 	lds	r8, 0x0152	; 0x800152 <cyc_cnt_val_temp>
     bbe:	90 90 53 01 	lds	r9, 0x0153	; 0x800153 <cyc_cnt_val_temp+0x1>
     bc2:	a0 90 54 01 	lds	r10, 0x0154	; 0x800154 <cyc_cnt_val_temp+0x2>
     bc6:	b0 90 55 01 	lds	r11, 0x0155	; 0x800155 <cyc_cnt_val_temp+0x3>
     bca:	f7 01       	movw	r30, r14
     bcc:	a0 81       	ld	r26, Z
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
     bd4:	86 0e       	add	r8, r22
     bd6:	97 1e       	adc	r9, r23
     bd8:	a8 1e       	adc	r10, r24
     bda:	b9 1e       	adc	r11, r25
     bdc:	80 92 52 01 	sts	0x0152, r8	; 0x800152 <cyc_cnt_val_temp>
     be0:	90 92 53 01 	sts	0x0153, r9	; 0x800153 <cyc_cnt_val_temp+0x1>
     be4:	a0 92 54 01 	sts	0x0154, r10	; 0x800154 <cyc_cnt_val_temp+0x2>
     be8:	b0 92 55 01 	sts	0x0155, r11	; 0x800155 <cyc_cnt_val_temp+0x3>
				CLEARBIT(flag_switch, MOTOR_1_PARAM_SET);
				op_spd_val_temp = 0;
				cw_setcnt_val_temp = 0;
				ccw_setcnt_val_temp = 0;
				cyc_cnt_val_temp = 0;
				for (int foo=0; foo<=11; foo++)
     bec:	21 96       	adiw	r28, 0x01	; 1
     bee:	ff ef       	ldi	r31, 0xFF	; 255
     bf0:	cf 1a       	sub	r12, r31
     bf2:	df 0a       	sbc	r13, r31
     bf4:	2f ef       	ldi	r18, 0xFF	; 255
     bf6:	e2 1a       	sub	r14, r18
     bf8:	f2 0a       	sbc	r15, r18
     bfa:	1f 5f       	subi	r17, 0xFF	; 255
     bfc:	17 30       	cpi	r17, 0x07	; 7
     bfe:	09 f0       	breq	.+2      	; 0xc02 <thumbwheel_read+0x35e>
     c00:	61 cf       	rjmp	.-318    	; 0xac4 <thumbwheel_read+0x220>
						}
						else
						cyc_cnt_val_temp += (BCD_VAL_B[foo])*(_exp(foo-5));
					}
				}
				SETBIT(flag_switch, MOTOR_1_PARAM_SET);
     c02:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     c06:	82 60       	ori	r24, 0x02	; 2
     c08:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
			}
		}
    }
}
     c0c:	df 91       	pop	r29
     c0e:	cf 91       	pop	r28
     c10:	1f 91       	pop	r17
     c12:	ff 90       	pop	r15
     c14:	ef 90       	pop	r14
     c16:	df 90       	pop	r13
     c18:	cf 90       	pop	r12
     c1a:	bf 90       	pop	r11
     c1c:	af 90       	pop	r10
     c1e:	9f 90       	pop	r9
     c20:	8f 90       	pop	r8
     c22:	7f 90       	pop	r7
     c24:	6f 90       	pop	r6
     c26:	5f 90       	pop	r5
     c28:	4f 90       	pop	r4
     c2a:	08 95       	ret

00000c2c <switches_read>:

uint32_t start_deb_ctr=0;
uint32_t stop_deb_ctr=0;

void switches_read(uint32_t lapsed_time)
{
     c2c:	0f 93       	push	r16
     c2e:	1f 93       	push	r17
	
	if (CHECKBIT(flag_switch,flag_stop))
     c30:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     c34:	21 ff       	sbrs	r18, 1
     c36:	46 c0       	rjmp	.+140    	; 0xcc4 <switches_read+0x98>
	{
		if ((!READ(start_pin)) && (op_spd_val_temp!=0))   //if start pin is pressed and operating speed set is not zero
     c38:	62 99       	sbic	0x0c, 2	; 12
     c3a:	3c c0       	rjmp	.+120    	; 0xcb4 <switches_read+0x88>
     c3c:	00 91 4e 01 	lds	r16, 0x014E	; 0x80014e <op_spd_val_temp>
     c40:	10 91 4f 01 	lds	r17, 0x014F	; 0x80014f <op_spd_val_temp+0x1>
     c44:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <op_spd_val_temp+0x2>
     c48:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <op_spd_val_temp+0x3>
     c4c:	01 2b       	or	r16, r17
     c4e:	02 2b       	or	r16, r18
     c50:	03 2b       	or	r16, r19
     c52:	81 f1       	breq	.+96     	; 0xcb4 <switches_read+0x88>
		{
			if (!CHECKBIT(flag_switch,flag_start))
     c54:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     c58:	20 fd       	sbrc	r18, 0
     c5a:	34 c0       	rjmp	.+104    	; 0xcc4 <switches_read+0x98>
			{
				start_deb_ctr += lapsed_time;
     c5c:	00 91 22 01 	lds	r16, 0x0122	; 0x800122 <start_deb_ctr>
     c60:	10 91 23 01 	lds	r17, 0x0123	; 0x800123 <start_deb_ctr+0x1>
     c64:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <start_deb_ctr+0x2>
     c68:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <start_deb_ctr+0x3>
     c6c:	06 0f       	add	r16, r22
     c6e:	17 1f       	adc	r17, r23
     c70:	28 1f       	adc	r18, r24
     c72:	39 1f       	adc	r19, r25
     c74:	00 93 22 01 	sts	0x0122, r16	; 0x800122 <start_deb_ctr>
     c78:	10 93 23 01 	sts	0x0123, r17	; 0x800123 <start_deb_ctr+0x1>
     c7c:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <start_deb_ctr+0x2>
     c80:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <start_deb_ctr+0x3>
				if (start_deb_ctr >= SW_DEB)
     c84:	00 32       	cpi	r16, 0x20	; 32
     c86:	1e 44       	sbci	r17, 0x4E	; 78
     c88:	21 05       	cpc	r18, r1
     c8a:	31 05       	cpc	r19, r1
     c8c:	d8 f0       	brcs	.+54     	; 0xcc4 <switches_read+0x98>
				{
					SETBIT(flag_switch, flag_start);
     c8e:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     c92:	21 60       	ori	r18, 0x01	; 1
     c94:	20 93 4d 01 	sts	0x014D, r18	; 0x80014d <flag_switch>
					CLEARBIT(flag_switch, flag_stop);
     c98:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     c9c:	2d 7f       	andi	r18, 0xFD	; 253
     c9e:	20 93 4d 01 	sts	0x014D, r18	; 0x80014d <flag_switch>
					start_deb_ctr = 0;
     ca2:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <start_deb_ctr>
     ca6:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <start_deb_ctr+0x1>
     caa:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <start_deb_ctr+0x2>
     cae:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <start_deb_ctr+0x3>
     cb2:	08 c0       	rjmp	.+16     	; 0xcc4 <switches_read+0x98>
				}
			}			
		}
		else start_deb_ctr = 0;		
     cb4:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <start_deb_ctr>
     cb8:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <start_deb_ctr+0x1>
     cbc:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <start_deb_ctr+0x2>
     cc0:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <start_deb_ctr+0x3>
	}	
	
	
	if (CHECKBIT(flag_switch,flag_start))
     cc4:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     cc8:	20 ff       	sbrs	r18, 0
     cca:	3d c0       	rjmp	.+122    	; 0xd46 <switches_read+0x11a>
	{
		_NOP();
     ccc:	00 00       	nop
		if (!READ(stop_pin))   //if stop pin is pressed
     cce:	63 99       	sbic	0x0c, 3	; 12
     cd0:	32 c0       	rjmp	.+100    	; 0xd36 <switches_read+0x10a>
		{
			if (!CHECKBIT(flag_switch,flag_stop))
     cd2:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <flag_switch>
     cd6:	21 fd       	sbrc	r18, 1
     cd8:	36 c0       	rjmp	.+108    	; 0xd46 <switches_read+0x11a>
			{
				stop_deb_ctr += lapsed_time;
     cda:	00 91 1e 01 	lds	r16, 0x011E	; 0x80011e <stop_deb_ctr>
     cde:	10 91 1f 01 	lds	r17, 0x011F	; 0x80011f <stop_deb_ctr+0x1>
     ce2:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <stop_deb_ctr+0x2>
     ce6:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <stop_deb_ctr+0x3>
     cea:	ab 01       	movw	r20, r22
     cec:	bc 01       	movw	r22, r24
     cee:	40 0f       	add	r20, r16
     cf0:	51 1f       	adc	r21, r17
     cf2:	62 1f       	adc	r22, r18
     cf4:	73 1f       	adc	r23, r19
     cf6:	40 93 1e 01 	sts	0x011E, r20	; 0x80011e <stop_deb_ctr>
     cfa:	50 93 1f 01 	sts	0x011F, r21	; 0x80011f <stop_deb_ctr+0x1>
     cfe:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <stop_deb_ctr+0x2>
     d02:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <stop_deb_ctr+0x3>
				if (stop_deb_ctr >= SW_DEB)
     d06:	40 32       	cpi	r20, 0x20	; 32
     d08:	5e 44       	sbci	r21, 0x4E	; 78
     d0a:	61 05       	cpc	r22, r1
     d0c:	71 05       	cpc	r23, r1
     d0e:	d8 f0       	brcs	.+54     	; 0xd46 <switches_read+0x11a>
				{
					SETBIT(flag_switch, flag_stop);
     d10:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     d14:	82 60       	ori	r24, 0x02	; 2
     d16:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
					CLEARBIT(flag_switch, flag_start);
     d1a:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
     d1e:	8e 7f       	andi	r24, 0xFE	; 254
     d20:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
					stop_deb_ctr = 0;
     d24:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <stop_deb_ctr>
     d28:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <stop_deb_ctr+0x1>
     d2c:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <stop_deb_ctr+0x2>
     d30:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <stop_deb_ctr+0x3>
     d34:	08 c0       	rjmp	.+16     	; 0xd46 <switches_read+0x11a>
				}
			}
		}
		else stop_deb_ctr = 0;
     d36:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <stop_deb_ctr>
     d3a:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <stop_deb_ctr+0x1>
     d3e:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <stop_deb_ctr+0x2>
     d42:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <stop_deb_ctr+0x3>
	}
	
	
     d46:	1f 91       	pop	r17
     d48:	0f 91       	pop	r16
     d4a:	08 95       	ret

00000d4c <motor_set_param>:
volatile uint32_t ramp_OCR1A = 0;
volatile uint32_t rev_count_inc=0;    //no. of rev during ramp up

void motor_set_param()
{
	op_spd_val_temp = op_spd_val_temp<2?2:op_spd_val_temp;		//min operating speed = 2 rpm
     d4c:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <op_spd_val_temp>
     d50:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <op_spd_val_temp+0x1>
     d54:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <op_spd_val_temp+0x2>
     d58:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <op_spd_val_temp+0x3>
     d5c:	02 97       	sbiw	r24, 0x02	; 2
     d5e:	a1 05       	cpc	r26, r1
     d60:	b1 05       	cpc	r27, r1
     d62:	48 f0       	brcs	.+18     	; 0xd76 <motor_set_param+0x2a>
     d64:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <op_spd_val_temp>
     d68:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <op_spd_val_temp+0x1>
     d6c:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <op_spd_val_temp+0x2>
     d70:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <op_spd_val_temp+0x3>
     d74:	04 c0       	rjmp	.+8      	; 0xd7e <motor_set_param+0x32>
     d76:	82 e0       	ldi	r24, 0x02	; 2
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	a0 e0       	ldi	r26, 0x00	; 0
     d7c:	b0 e0       	ldi	r27, 0x00	; 0
     d7e:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <op_spd_val_temp>
     d82:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <op_spd_val_temp+0x1>
     d86:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <op_spd_val_temp+0x2>
     d8a:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <op_spd_val_temp+0x3>
	op_spd_val = op_spd_val_temp>2000?2000:op_spd_val_temp;		//max operating speed = 2000 rpm
     d8e:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <op_spd_val_temp>
     d92:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <op_spd_val_temp+0x1>
     d96:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <op_spd_val_temp+0x2>
     d9a:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <op_spd_val_temp+0x3>
     d9e:	81 3d       	cpi	r24, 0xD1	; 209
     da0:	97 40       	sbci	r25, 0x07	; 7
     da2:	a1 05       	cpc	r26, r1
     da4:	b1 05       	cpc	r27, r1
     da6:	48 f4       	brcc	.+18     	; 0xdba <motor_set_param+0x6e>
     da8:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <op_spd_val_temp>
     dac:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <op_spd_val_temp+0x1>
     db0:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <op_spd_val_temp+0x2>
     db4:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <op_spd_val_temp+0x3>
     db8:	04 c0       	rjmp	.+8      	; 0xdc2 <motor_set_param+0x76>
     dba:	80 ed       	ldi	r24, 0xD0	; 208
     dbc:	97 e0       	ldi	r25, 0x07	; 7
     dbe:	a0 e0       	ldi	r26, 0x00	; 0
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <op_spd_val>
     dc6:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <op_spd_val+0x1>
     dca:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <op_spd_val+0x2>
     dce:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <op_spd_val+0x3>
	cw_setcnt_val = cw_setcnt_val_temp;
     dd2:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <cw_setcnt_val_temp>
     dd6:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <cw_setcnt_val_temp+0x1>
     dda:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <cw_setcnt_val_temp+0x2>
     dde:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <cw_setcnt_val_temp+0x3>
     de2:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <cw_setcnt_val>
     de6:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <cw_setcnt_val+0x1>
     dea:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <cw_setcnt_val+0x2>
     dee:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <cw_setcnt_val+0x3>
	ccw_setcnt_val = ccw_setcnt_val_temp;
     df2:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <ccw_setcnt_val_temp>
     df6:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <ccw_setcnt_val_temp+0x1>
     dfa:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <ccw_setcnt_val_temp+0x2>
     dfe:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <ccw_setcnt_val_temp+0x3>
     e02:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <ccw_setcnt_val>
     e06:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <ccw_setcnt_val+0x1>
     e0a:	a0 93 58 01 	sts	0x0158, r26	; 0x800158 <ccw_setcnt_val+0x2>
     e0e:	b0 93 59 01 	sts	0x0159, r27	; 0x800159 <ccw_setcnt_val+0x3>
	cyc_cnt_val = cyc_cnt_val_temp;
     e12:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <cyc_cnt_val_temp>
     e16:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <cyc_cnt_val_temp+0x1>
     e1a:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <cyc_cnt_val_temp+0x2>
     e1e:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <cyc_cnt_val_temp+0x3>
     e22:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <cyc_cnt_val>
     e26:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <cyc_cnt_val+0x1>
     e2a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <cyc_cnt_val+0x2>
     e2e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <cyc_cnt_val+0x3>
	
	if (op_spd_val<20)
     e32:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <op_spd_val>
     e36:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <op_spd_val+0x1>
     e3a:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <op_spd_val+0x2>
     e3e:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <op_spd_val+0x3>
     e42:	44 97       	sbiw	r24, 0x14	; 20
     e44:	a1 05       	cpc	r26, r1
     e46:	b1 05       	cpc	r27, r1
     e48:	48 f4       	brcc	.+18     	; 0xe5c <motor_set_param+0x110>
	{
		ramp_time_val=0;
     e4a:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <ramp_time_val>
     e4e:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <ramp_time_val+0x1>
     e52:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <ramp_time_val+0x2>
     e56:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <ramp_time_val+0x3>
     e5a:	25 c0       	rjmp	.+74     	; 0xea6 <motor_set_param+0x15a>
	}
	else if(op_spd_val<50)
     e5c:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <op_spd_val>
     e60:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <op_spd_val+0x1>
     e64:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <op_spd_val+0x2>
     e68:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <op_spd_val+0x3>
     e6c:	c2 97       	sbiw	r24, 0x32	; 50
     e6e:	a1 05       	cpc	r26, r1
     e70:	b1 05       	cpc	r27, r1
     e72:	68 f4       	brcc	.+26     	; 0xe8e <motor_set_param+0x142>
	{
		ramp_time_val=1;
     e74:	80 e0       	ldi	r24, 0x00	; 0
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	a0 e8       	ldi	r26, 0x80	; 128
     e7a:	bf e3       	ldi	r27, 0x3F	; 63
     e7c:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <ramp_time_val>
     e80:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <ramp_time_val+0x1>
     e84:	a0 93 6b 01 	sts	0x016B, r26	; 0x80016b <ramp_time_val+0x2>
     e88:	b0 93 6c 01 	sts	0x016C, r27	; 0x80016c <ramp_time_val+0x3>
     e8c:	0c c0       	rjmp	.+24     	; 0xea6 <motor_set_param+0x15a>
	}
	else ramp_time_val=4;
     e8e:	80 e0       	ldi	r24, 0x00	; 0
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	a0 e8       	ldi	r26, 0x80	; 128
     e94:	b0 e4       	ldi	r27, 0x40	; 64
     e96:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <ramp_time_val>
     e9a:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <ramp_time_val+0x1>
     e9e:	a0 93 6b 01 	sts	0x016B, r26	; 0x80016b <ramp_time_val+0x2>
     ea2:	b0 93 6c 01 	sts	0x016C, r27	; 0x80016c <ramp_time_val+0x3>
	}
	else
	{
		ramp_time_val=10;
	}*/
	dead_time_val = dead_time_val_temp;
     ea6:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <dead_time_val_temp>
     eaa:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <dead_time_val_temp+0x1>
     eae:	a0 91 6f 01 	lds	r26, 0x016F	; 0x80016f <dead_time_val_temp+0x2>
     eb2:	b0 91 70 01 	lds	r27, 0x0170	; 0x800170 <dead_time_val_temp+0x3>
     eb6:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <dead_time_val>
     eba:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <dead_time_val+0x1>
     ebe:	a0 93 73 01 	sts	0x0173, r26	; 0x800173 <dead_time_val+0x2>
     ec2:	b0 93 74 01 	sts	0x0174, r27	; 0x800174 <dead_time_val+0x3>
	ramp_steps = ramp_time_val*10;			//ramp every 100 ms
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e2       	ldi	r20, 0x20	; 32
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	60 91 69 01 	lds	r22, 0x0169	; 0x800169 <ramp_time_val>
     ed2:	70 91 6a 01 	lds	r23, 0x016A	; 0x80016a <ramp_time_val+0x1>
     ed6:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <ramp_time_val+0x2>
     eda:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <ramp_time_val+0x3>
     ede:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
     ee2:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__fixunssfsi>
     ee6:	9b 01       	movw	r18, r22
     ee8:	ac 01       	movw	r20, r24
     eea:	60 93 8b 01 	sts	0x018B, r22	; 0x80018b <ramp_steps>
     eee:	70 93 8c 01 	sts	0x018C, r23	; 0x80018c <ramp_steps+0x1>
     ef2:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <ramp_steps+0x2>
     ef6:	90 93 8e 01 	sts	0x018E, r25	; 0x80018e <ramp_steps+0x3>
	ramp_inc_dec = op_spd_val/ramp_steps;	//increment/decrement of rpm per 100ms	
     efa:	60 91 65 01 	lds	r22, 0x0165	; 0x800165 <op_spd_val>
     efe:	70 91 66 01 	lds	r23, 0x0166	; 0x800166 <op_spd_val+0x1>
     f02:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <op_spd_val+0x2>
     f06:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <op_spd_val+0x3>
     f0a:	0e 94 c8 0c 	call	0x1990	; 0x1990 <__udivmodsi4>
     f0e:	20 93 39 01 	sts	0x0139, r18	; 0x800139 <ramp_inc_dec>
     f12:	30 93 3a 01 	sts	0x013A, r19	; 0x80013a <ramp_inc_dec+0x1>
     f16:	40 93 3b 01 	sts	0x013B, r20	; 0x80013b <ramp_inc_dec+0x2>
     f1a:	50 93 3c 01 	sts	0x013C, r21	; 0x80013c <ramp_inc_dec+0x3>
	
	if (cw_setcnt_val <= 0)
     f1e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <cw_setcnt_val>
     f22:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <cw_setcnt_val+0x1>
     f26:	a0 91 40 01 	lds	r26, 0x0140	; 0x800140 <cw_setcnt_val+0x2>
     f2a:	b0 91 41 01 	lds	r27, 0x0141	; 0x800141 <cw_setcnt_val+0x3>
     f2e:	89 2b       	or	r24, r25
     f30:	8a 2b       	or	r24, r26
     f32:	8b 2b       	or	r24, r27
     f34:	29 f4       	brne	.+10     	; 0xf40 <motor_set_param+0x1f4>
	{
		CLEARBIT(flag_motor2,MOTOR_2_DIR_CW);
     f36:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
     f3a:	8e 7f       	andi	r24, 0xFE	; 254
     f3c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <flag_motor2>
     f40:	08 95       	ret

00000f42 <motor_acceleration>:


int motor_acceleration(void)
{
	int result=0;
	if (ramp_time_val==0)
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	a9 01       	movw	r20, r18
     f48:	60 91 69 01 	lds	r22, 0x0169	; 0x800169 <ramp_time_val>
     f4c:	70 91 6a 01 	lds	r23, 0x016A	; 0x80016a <ramp_time_val+0x1>
     f50:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <ramp_time_val+0x2>
     f54:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <ramp_time_val+0x3>
     f58:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__cmpsf2>
     f5c:	81 11       	cpse	r24, r1
     f5e:	47 c0       	rjmp	.+142    	; 0xfee <motor_acceleration+0xac>
	{
		ramp_OCR1A=op_spd_val;
     f60:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <op_spd_val>
     f64:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <op_spd_val+0x1>
     f68:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <op_spd_val+0x2>
     f6c:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <op_spd_val+0x3>
     f70:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <ramp_OCR1A>
     f74:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <ramp_OCR1A+0x1>
     f78:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <ramp_OCR1A+0x2>
     f7c:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <ramp_OCR1A+0x3>
		//CLEARBIT(TCCR1B, CS11); //timer stop, prescale=8
		OCR1A = (1/(ramp_OCR1A*.000008333))-1;
     f80:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <ramp_OCR1A>
     f84:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
     f88:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
     f8c:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
     f90:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
     f94:	26 ef       	ldi	r18, 0xF6	; 246
     f96:	3d ec       	ldi	r19, 0xCD	; 205
     f98:	4b e0       	ldi	r20, 0x0B	; 11
     f9a:	57 e3       	ldi	r21, 0x37	; 55
     f9c:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
     fa0:	9b 01       	movw	r18, r22
     fa2:	ac 01       	movw	r20, r24
     fa4:	60 e0       	ldi	r22, 0x00	; 0
     fa6:	70 e0       	ldi	r23, 0x00	; 0
     fa8:	80 e8       	ldi	r24, 0x80	; 128
     faa:	9f e3       	ldi	r25, 0x3F	; 63
     fac:	0e 94 03 0b 	call	0x1606	; 0x1606 <__divsf3>
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	40 e8       	ldi	r20, 0x80	; 128
     fb6:	5f e3       	ldi	r21, 0x3F	; 63
     fb8:	0e 94 91 0a 	call	0x1522	; 0x1522 <__subsf3>
     fbc:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__fixunssfsi>
     fc0:	e8 e8       	ldi	r30, 0x88	; 136
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	71 83       	std	Z+1, r23	; 0x01
     fc6:	60 83       	st	Z, r22
		if (TCNT1>OCR1A)
     fc8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fcc:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fd0:	80 81       	ld	r24, Z
     fd2:	91 81       	ldd	r25, Z+1	; 0x01
     fd4:	82 17       	cp	r24, r18
     fd6:	93 07       	cpc	r25, r19
     fd8:	20 f4       	brcc	.+8      	; 0xfe2 <motor_acceleration+0xa0>
		{
			TCNT1=0;
     fda:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fde:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
		}
		SETBIT(TCCR1B, CS11); //timer start, prescale=8
     fe2:	e1 e8       	ldi	r30, 0x81	; 129
     fe4:	f0 e0       	ldi	r31, 0x00	; 0
     fe6:	80 81       	ld	r24, Z
     fe8:	82 60       	ori	r24, 0x02	; 2
     fea:	80 83       	st	Z, r24
     fec:	1c c0       	rjmp	.+56     	; 0x1026 <motor_acceleration+0xe4>
	}
	else ramp_OCR1A += ramp_inc_dec;
     fee:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <ramp_inc_dec>
     ff2:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <ramp_inc_dec+0x1>
     ff6:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <ramp_inc_dec+0x2>
     ffa:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <ramp_inc_dec+0x3>
     ffe:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ramp_OCR1A>
    1002:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    1006:	a0 91 37 01 	lds	r26, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    100a:	b0 91 38 01 	lds	r27, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    100e:	84 0f       	add	r24, r20
    1010:	95 1f       	adc	r25, r21
    1012:	a6 1f       	adc	r26, r22
    1014:	b7 1f       	adc	r27, r23
    1016:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <ramp_OCR1A>
    101a:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <ramp_OCR1A+0x1>
    101e:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <ramp_OCR1A+0x2>
    1022:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <ramp_OCR1A+0x3>
	
	if ( ramp_OCR1A < op_spd_val)
    1026:	40 91 35 01 	lds	r20, 0x0135	; 0x800135 <ramp_OCR1A>
    102a:	50 91 36 01 	lds	r21, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    102e:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    1032:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    1036:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <op_spd_val>
    103a:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <op_spd_val+0x1>
    103e:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <op_spd_val+0x2>
    1042:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <op_spd_val+0x3>
    1046:	48 17       	cp	r20, r24
    1048:	59 07       	cpc	r21, r25
    104a:	6a 07       	cpc	r22, r26
    104c:	7b 07       	cpc	r23, r27
    104e:	c8 f5       	brcc	.+114    	; 0x10c2 <motor_acceleration+0x180>
	{
		//CLEARBIT(TCCR1B, CS11); //timer stop, prescale=8
		OCR1A = (1/(ramp_OCR1A*.000008333))-1;
    1050:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <ramp_OCR1A>
    1054:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    1058:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    105c:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    1060:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    1064:	26 ef       	ldi	r18, 0xF6	; 246
    1066:	3d ec       	ldi	r19, 0xCD	; 205
    1068:	4b e0       	ldi	r20, 0x0B	; 11
    106a:	57 e3       	ldi	r21, 0x37	; 55
    106c:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
    1070:	9b 01       	movw	r18, r22
    1072:	ac 01       	movw	r20, r24
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	80 e8       	ldi	r24, 0x80	; 128
    107a:	9f e3       	ldi	r25, 0x3F	; 63
    107c:	0e 94 03 0b 	call	0x1606	; 0x1606 <__divsf3>
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 e8       	ldi	r20, 0x80	; 128
    1086:	5f e3       	ldi	r21, 0x3F	; 63
    1088:	0e 94 91 0a 	call	0x1522	; 0x1522 <__subsf3>
    108c:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__fixunssfsi>
    1090:	e8 e8       	ldi	r30, 0x88	; 136
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	71 83       	std	Z+1, r23	; 0x01
    1096:	60 83       	st	Z, r22
		if (TCNT1>OCR1A)
    1098:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    109c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10a0:	80 81       	ld	r24, Z
    10a2:	91 81       	ldd	r25, Z+1	; 0x01
    10a4:	82 17       	cp	r24, r18
    10a6:	93 07       	cpc	r25, r19
    10a8:	20 f4       	brcc	.+8      	; 0x10b2 <motor_acceleration+0x170>
		{
			TCNT1=0;
    10aa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ae:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
		}
		SETBIT(TCCR1B, CS11); //timer start, prescale=8
    10b2:	e1 e8       	ldi	r30, 0x81	; 129
    10b4:	f0 e0       	ldi	r31, 0x00	; 0
    10b6:	80 81       	ld	r24, Z
    10b8:	82 60       	ori	r24, 0x02	; 2
    10ba:	80 83       	st	Z, r24
float Hz;


int motor_acceleration(void)
{
	int result=0;
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	08 95       	ret
		SETBIT(TCCR1B, CS11); //timer start, prescale=8
	}
	else 
	{	
		//SETBIT(flag_motor2, MOTOR_2_RAMPUP_DONE);
		rev_count_inc = !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)?ccw_pulse_ctr:cw_pulse_ctr;
    10c2:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    10c6:	80 fd       	sbrc	r24, 0
    10c8:	09 c0       	rjmp	.+18     	; 0x10dc <motor_acceleration+0x19a>
    10ca:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <ccw_pulse_ctr>
    10ce:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <ccw_pulse_ctr+0x1>
    10d2:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <ccw_pulse_ctr+0x2>
    10d6:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <ccw_pulse_ctr+0x3>
    10da:	08 c0       	rjmp	.+16     	; 0x10ec <motor_acceleration+0x1aa>
    10dc:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <cw_pulse_ctr>
    10e0:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <cw_pulse_ctr+0x1>
    10e4:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <cw_pulse_ctr+0x2>
    10e8:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <cw_pulse_ctr+0x3>
    10ec:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <rev_count_inc>
    10f0:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <rev_count_inc+0x1>
    10f4:	a0 93 33 01 	sts	0x0133, r26	; 0x800133 <rev_count_inc+0x2>
    10f8:	b0 93 34 01 	sts	0x0134, r27	; 0x800134 <rev_count_inc+0x3>
		flag_motor_1 = MOTOR_1_OPRTNG_SPD;
    10fc:	83 e0       	ldi	r24, 0x03	; 3
    10fe:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <flag_motor_1>
		result=1;
    1102:	81 e0       	ldi	r24, 0x01	; 1
    1104:	90 e0       	ldi	r25, 0x00	; 0
	}
	return result;
}
    1106:	08 95       	ret

00001108 <motor_operating_spd>:
int motor_operating_spd(void)
{
    1108:	4f 92       	push	r4
    110a:	5f 92       	push	r5
    110c:	6f 92       	push	r6
    110e:	7f 92       	push	r7
    1110:	8f 92       	push	r8
    1112:	9f 92       	push	r9
    1114:	af 92       	push	r10
    1116:	bf 92       	push	r11
    1118:	cf 92       	push	r12
    111a:	df 92       	push	r13
    111c:	ef 92       	push	r14
    111e:	ff 92       	push	r15
	int result=0;
	OCR1A = (1/(op_spd_val*.000008333))-1;
    1120:	60 91 65 01 	lds	r22, 0x0165	; 0x800165 <op_spd_val>
    1124:	70 91 66 01 	lds	r23, 0x0166	; 0x800166 <op_spd_val+0x1>
    1128:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <op_spd_val+0x2>
    112c:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <op_spd_val+0x3>
    1130:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    1134:	26 ef       	ldi	r18, 0xF6	; 246
    1136:	3d ec       	ldi	r19, 0xCD	; 205
    1138:	4b e0       	ldi	r20, 0x0B	; 11
    113a:	57 e3       	ldi	r21, 0x37	; 55
    113c:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
    1140:	9b 01       	movw	r18, r22
    1142:	ac 01       	movw	r20, r24
    1144:	60 e0       	ldi	r22, 0x00	; 0
    1146:	70 e0       	ldi	r23, 0x00	; 0
    1148:	80 e8       	ldi	r24, 0x80	; 128
    114a:	9f e3       	ldi	r25, 0x3F	; 63
    114c:	0e 94 03 0b 	call	0x1606	; 0x1606 <__divsf3>
    1150:	20 e0       	ldi	r18, 0x00	; 0
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	40 e8       	ldi	r20, 0x80	; 128
    1156:	5f e3       	ldi	r21, 0x3F	; 63
    1158:	0e 94 91 0a 	call	0x1522	; 0x1522 <__subsf3>
    115c:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__fixunssfsi>
    1160:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1164:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
	if ( (cw_pulse_ctr>=((cw_setcnt_val*1000) - (rev_count_inc*1.02)) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||
    1168:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <cw_pulse_ctr>
    116c:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <cw_pulse_ctr+0x1>
    1170:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <cw_pulse_ctr+0x2>
    1174:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <cw_pulse_ctr+0x3>
    1178:	80 90 3e 01 	lds	r8, 0x013E	; 0x80013e <cw_setcnt_val>
    117c:	90 90 3f 01 	lds	r9, 0x013F	; 0x80013f <cw_setcnt_val+0x1>
    1180:	a0 90 40 01 	lds	r10, 0x0140	; 0x800140 <cw_setcnt_val+0x2>
    1184:	b0 90 41 01 	lds	r11, 0x0141	; 0x800141 <cw_setcnt_val+0x3>
    1188:	40 90 31 01 	lds	r4, 0x0131	; 0x800131 <rev_count_inc>
    118c:	50 90 32 01 	lds	r5, 0x0132	; 0x800132 <rev_count_inc+0x1>
    1190:	60 90 33 01 	lds	r6, 0x0133	; 0x800133 <rev_count_inc+0x2>
    1194:	70 90 34 01 	lds	r7, 0x0134	; 0x800134 <rev_count_inc+0x3>
    1198:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    119c:	6b 01       	movw	r12, r22
    119e:	7c 01       	movw	r14, r24
    11a0:	a8 ee       	ldi	r26, 0xE8	; 232
    11a2:	b3 e0       	ldi	r27, 0x03	; 3
    11a4:	a5 01       	movw	r20, r10
    11a6:	94 01       	movw	r18, r8
    11a8:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
    11ac:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    11b0:	4b 01       	movw	r8, r22
    11b2:	5c 01       	movw	r10, r24
    11b4:	c3 01       	movw	r24, r6
    11b6:	b2 01       	movw	r22, r4
    11b8:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    11bc:	2c e5       	ldi	r18, 0x5C	; 92
    11be:	3f e8       	ldi	r19, 0x8F	; 143
    11c0:	42 e8       	ldi	r20, 0x82	; 130
    11c2:	5f e3       	ldi	r21, 0x3F	; 63
    11c4:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
    11c8:	9b 01       	movw	r18, r22
    11ca:	ac 01       	movw	r20, r24
    11cc:	c5 01       	movw	r24, r10
    11ce:	b4 01       	movw	r22, r8
    11d0:	0e 94 91 0a 	call	0x1522	; 0x1522 <__subsf3>
    11d4:	9b 01       	movw	r18, r22
    11d6:	ac 01       	movw	r20, r24
    11d8:	c7 01       	movw	r24, r14
    11da:	b6 01       	movw	r22, r12
    11dc:	0e 94 56 0c 	call	0x18ac	; 0x18ac <__gesf2>
    11e0:	88 23       	and	r24, r24
    11e2:	24 f0       	brlt	.+8      	; 0x11ec <motor_operating_spd+0xe4>
    11e4:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    11e8:	80 fd       	sbrc	r24, 0
    11ea:	45 c0       	rjmp	.+138    	; 0x1276 <motor_operating_spd+0x16e>
	     (ccw_pulse_ctr>=((ccw_setcnt_val*1000) - (rev_count_inc*1.02)) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) )
    11ec:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ccw_pulse_ctr>
    11f0:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <ccw_pulse_ctr+0x1>
    11f4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <ccw_pulse_ctr+0x2>
    11f8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <ccw_pulse_ctr+0x3>
    11fc:	80 90 56 01 	lds	r8, 0x0156	; 0x800156 <ccw_setcnt_val>
    1200:	90 90 57 01 	lds	r9, 0x0157	; 0x800157 <ccw_setcnt_val+0x1>
    1204:	a0 90 58 01 	lds	r10, 0x0158	; 0x800158 <ccw_setcnt_val+0x2>
    1208:	b0 90 59 01 	lds	r11, 0x0159	; 0x800159 <ccw_setcnt_val+0x3>
    120c:	40 90 31 01 	lds	r4, 0x0131	; 0x800131 <rev_count_inc>
    1210:	50 90 32 01 	lds	r5, 0x0132	; 0x800132 <rev_count_inc+0x1>
    1214:	60 90 33 01 	lds	r6, 0x0133	; 0x800133 <rev_count_inc+0x2>
    1218:	70 90 34 01 	lds	r7, 0x0134	; 0x800134 <rev_count_inc+0x3>
}
int motor_operating_spd(void)
{
	int result=0;
	OCR1A = (1/(op_spd_val*.000008333))-1;
	if ( (cw_pulse_ctr>=((cw_setcnt_val*1000) - (rev_count_inc*1.02)) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||
    121c:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    1220:	6b 01       	movw	r12, r22
    1222:	7c 01       	movw	r14, r24
    1224:	a8 ee       	ldi	r26, 0xE8	; 232
    1226:	b3 e0       	ldi	r27, 0x03	; 3
    1228:	a5 01       	movw	r20, r10
    122a:	94 01       	movw	r18, r8
    122c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
    1230:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    1234:	4b 01       	movw	r8, r22
    1236:	5c 01       	movw	r10, r24
    1238:	c3 01       	movw	r24, r6
    123a:	b2 01       	movw	r22, r4
    123c:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    1240:	2c e5       	ldi	r18, 0x5C	; 92
    1242:	3f e8       	ldi	r19, 0x8F	; 143
    1244:	42 e8       	ldi	r20, 0x82	; 130
    1246:	5f e3       	ldi	r21, 0x3F	; 63
    1248:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
    124c:	9b 01       	movw	r18, r22
    124e:	ac 01       	movw	r20, r24
    1250:	c5 01       	movw	r24, r10
    1252:	b4 01       	movw	r22, r8
    1254:	0e 94 91 0a 	call	0x1522	; 0x1522 <__subsf3>
    1258:	9b 01       	movw	r18, r22
    125a:	ac 01       	movw	r20, r24
    125c:	c7 01       	movw	r24, r14
    125e:	b6 01       	movw	r22, r12
    1260:	0e 94 56 0c 	call	0x18ac	; 0x18ac <__gesf2>
    1264:	88 23       	and	r24, r24
    1266:	54 f0       	brlt	.+20     	; 0x127c <motor_operating_spd+0x174>
	     (ccw_pulse_ctr>=((ccw_setcnt_val*1000) - (rev_count_inc*1.02)) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) )
    1268:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <flag_motor2>
	}
	return result;
}
int motor_operating_spd(void)
{
	int result=0;
    126c:	81 e0       	ldi	r24, 0x01	; 1
    126e:	e8 27       	eor	r30, r24
    1270:	e1 70       	andi	r30, 0x01	; 1
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	05 c0       	rjmp	.+10     	; 0x1280 <motor_operating_spd+0x178>
	OCR1A = (1/(op_spd_val*.000008333))-1;
	if ( (cw_pulse_ctr>=((cw_setcnt_val*1000) - (rev_count_inc*1.02)) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||
	     (ccw_pulse_ctr>=((ccw_setcnt_val*1000) - (rev_count_inc*1.02)) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) )
	{
		result=1;	
    1276:	e1 e0       	ldi	r30, 0x01	; 1
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	02 c0       	rjmp	.+4      	; 0x1280 <motor_operating_spd+0x178>
	}
	return result;
}
int motor_operating_spd(void)
{
	int result=0;
    127c:	e0 e0       	ldi	r30, 0x00	; 0
    127e:	f0 e0       	ldi	r31, 0x00	; 0
	if ( (cw_pulse_ctr>=((cw_setcnt_val*1000) - (rev_count_inc*1.02)) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||
	     (ccw_pulse_ctr>=((ccw_setcnt_val*1000) - (rev_count_inc*1.02)) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) )
	{
		result=1;	
	}
	if (  ((rev_count_inc*2)>(cw_setcnt_val*1000) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW))
    1280:	c0 90 31 01 	lds	r12, 0x0131	; 0x800131 <rev_count_inc>
    1284:	d0 90 32 01 	lds	r13, 0x0132	; 0x800132 <rev_count_inc+0x1>
    1288:	e0 90 33 01 	lds	r14, 0x0133	; 0x800133 <rev_count_inc+0x2>
    128c:	f0 90 34 01 	lds	r15, 0x0134	; 0x800134 <rev_count_inc+0x3>
    1290:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <cw_setcnt_val>
    1294:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <cw_setcnt_val+0x1>
    1298:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <cw_setcnt_val+0x2>
    129c:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <cw_setcnt_val+0x3>
    12a0:	cc 0c       	add	r12, r12
    12a2:	dd 1c       	adc	r13, r13
    12a4:	ee 1c       	adc	r14, r14
    12a6:	ff 1c       	adc	r15, r15
    12a8:	a8 ee       	ldi	r26, 0xE8	; 232
    12aa:	b3 e0       	ldi	r27, 0x03	; 3
    12ac:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
    12b0:	6c 15       	cp	r22, r12
    12b2:	7d 05       	cpc	r23, r13
    12b4:	8e 05       	cpc	r24, r14
    12b6:	9f 05       	cpc	r25, r15
    12b8:	20 f4       	brcc	.+8      	; 0x12c2 <motor_operating_spd+0x1ba>
    12ba:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    12be:	80 fd       	sbrc	r24, 0
    12c0:	21 c0       	rjmp	.+66     	; 0x1304 <motor_operating_spd+0x1fc>
			|| ((rev_count_inc*2)>(ccw_setcnt_val*1000) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) )
    12c2:	c0 90 31 01 	lds	r12, 0x0131	; 0x800131 <rev_count_inc>
    12c6:	d0 90 32 01 	lds	r13, 0x0132	; 0x800132 <rev_count_inc+0x1>
    12ca:	e0 90 33 01 	lds	r14, 0x0133	; 0x800133 <rev_count_inc+0x2>
    12ce:	f0 90 34 01 	lds	r15, 0x0134	; 0x800134 <rev_count_inc+0x3>
    12d2:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <ccw_setcnt_val>
    12d6:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <ccw_setcnt_val+0x1>
    12da:	40 91 58 01 	lds	r20, 0x0158	; 0x800158 <ccw_setcnt_val+0x2>
    12de:	50 91 59 01 	lds	r21, 0x0159	; 0x800159 <ccw_setcnt_val+0x3>
    12e2:	cc 0c       	add	r12, r12
    12e4:	dd 1c       	adc	r13, r13
    12e6:	ee 1c       	adc	r14, r14
    12e8:	ff 1c       	adc	r15, r15
    12ea:	a8 ee       	ldi	r26, 0xE8	; 232
    12ec:	b3 e0       	ldi	r27, 0x03	; 3
    12ee:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
    12f2:	6c 15       	cp	r22, r12
    12f4:	7d 05       	cpc	r23, r13
    12f6:	8e 05       	cpc	r24, r14
    12f8:	9f 05       	cpc	r25, r15
    12fa:	70 f4       	brcc	.+28     	; 0x1318 <motor_operating_spd+0x210>
    12fc:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    1300:	80 fd       	sbrc	r24, 0
    1302:	0a c0       	rjmp	.+20     	; 0x1318 <motor_operating_spd+0x210>
	{
		
		SETBIT(flag_switch, flag_stop);
    1304:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
    1308:	82 60       	ori	r24, 0x02	; 2
    130a:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
		CLEARBIT(flag_switch, flag_start);
    130e:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
    1312:	8e 7f       	andi	r24, 0xFE	; 254
    1314:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
	}
	return result;
}
    1318:	8e 2f       	mov	r24, r30
    131a:	9f 2f       	mov	r25, r31
    131c:	ff 90       	pop	r15
    131e:	ef 90       	pop	r14
    1320:	df 90       	pop	r13
    1322:	cf 90       	pop	r12
    1324:	bf 90       	pop	r11
    1326:	af 90       	pop	r10
    1328:	9f 90       	pop	r9
    132a:	8f 90       	pop	r8
    132c:	7f 90       	pop	r7
    132e:	6f 90       	pop	r6
    1330:	5f 90       	pop	r5
    1332:	4f 90       	pop	r4
    1334:	08 95       	ret

00001336 <motor_deceleration>:
void motor_deceleration()
{
    1336:	cf 92       	push	r12
    1338:	df 92       	push	r13
    133a:	ef 92       	push	r14
    133c:	ff 92       	push	r15
	if (  ( CHECKBIT(flag_switch, flag_start) && (ramp_OCR1A>ramp_inc_dec) && 
    133e:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
    1342:	80 ff       	sbrs	r24, 0
    1344:	4f c0       	rjmp	.+158    	; 0x13e4 <motor_deceleration+0xae>
    1346:	40 91 35 01 	lds	r20, 0x0135	; 0x800135 <ramp_OCR1A>
    134a:	50 91 36 01 	lds	r21, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    134e:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    1352:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    1356:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <ramp_inc_dec>
    135a:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <ramp_inc_dec+0x1>
    135e:	a0 91 3b 01 	lds	r26, 0x013B	; 0x80013b <ramp_inc_dec+0x2>
    1362:	b0 91 3c 01 	lds	r27, 0x013C	; 0x80013c <ramp_inc_dec+0x3>
    1366:	84 17       	cp	r24, r20
    1368:	95 07       	cpc	r25, r21
    136a:	a6 07       	cpc	r26, r22
    136c:	b7 07       	cpc	r27, r23
    136e:	d0 f5       	brcc	.+116    	; 0x13e4 <motor_deceleration+0xae>
			( (cw_pulse_ctr<=(cw_setcnt_val*1000) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||  
    1370:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <cw_setcnt_val>
    1374:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <cw_setcnt_val+0x1>
    1378:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <cw_setcnt_val+0x2>
    137c:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <cw_setcnt_val+0x3>
    1380:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <cw_pulse_ctr>
    1384:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <cw_pulse_ctr+0x1>
    1388:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <cw_pulse_ctr+0x2>
    138c:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <cw_pulse_ctr+0x3>
	}
	return result;
}
void motor_deceleration()
{
	if (  ( CHECKBIT(flag_switch, flag_start) && (ramp_OCR1A>ramp_inc_dec) && 
    1390:	a8 ee       	ldi	r26, 0xE8	; 232
    1392:	b3 e0       	ldi	r27, 0x03	; 3
    1394:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
    1398:	6c 15       	cp	r22, r12
    139a:	7d 05       	cpc	r23, r13
    139c:	8e 05       	cpc	r24, r14
    139e:	9f 05       	cpc	r25, r15
    13a0:	20 f0       	brcs	.+8      	; 0x13aa <motor_deceleration+0x74>
			( (cw_pulse_ctr<=(cw_setcnt_val*1000) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||  
    13a2:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    13a6:	80 fd       	sbrc	r24, 0
    13a8:	37 c0       	rjmp	.+110    	; 0x1418 <motor_deceleration+0xe2>
			  (ccw_pulse_ctr<=(ccw_setcnt_val*1000) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ) )   
    13aa:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <ccw_setcnt_val>
    13ae:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <ccw_setcnt_val+0x1>
    13b2:	40 91 58 01 	lds	r20, 0x0158	; 0x800158 <ccw_setcnt_val+0x2>
    13b6:	50 91 59 01 	lds	r21, 0x0159	; 0x800159 <ccw_setcnt_val+0x3>
    13ba:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <ccw_pulse_ctr>
    13be:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <ccw_pulse_ctr+0x1>
    13c2:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <ccw_pulse_ctr+0x2>
    13c6:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <ccw_pulse_ctr+0x3>
	return result;
}
void motor_deceleration()
{
	if (  ( CHECKBIT(flag_switch, flag_start) && (ramp_OCR1A>ramp_inc_dec) && 
			( (cw_pulse_ctr<=(cw_setcnt_val*1000) && CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ||  
    13ca:	a8 ee       	ldi	r26, 0xE8	; 232
    13cc:	b3 e0       	ldi	r27, 0x03	; 3
    13ce:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__muluhisi3>
    13d2:	6c 15       	cp	r22, r12
    13d4:	7d 05       	cpc	r23, r13
    13d6:	8e 05       	cpc	r24, r14
    13d8:	9f 05       	cpc	r25, r15
    13da:	20 f0       	brcs	.+8      	; 0x13e4 <motor_deceleration+0xae>
			  (ccw_pulse_ctr<=(ccw_setcnt_val*1000) && !CHECKBIT(flag_motor2,MOTOR_2_DIR_CW)) ) )   
    13dc:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    13e0:	80 ff       	sbrs	r24, 0
    13e2:	1a c0       	rjmp	.+52     	; 0x1418 <motor_deceleration+0xe2>
		  ||  ((CHECKBIT(flag_switch, flag_stop) && (ramp_OCR1A>ramp_inc_dec)) ) )
    13e4:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
    13e8:	81 ff       	sbrs	r24, 1
    13ea:	57 c0       	rjmp	.+174    	; 0x149a <motor_deceleration+0x164>
    13ec:	40 91 35 01 	lds	r20, 0x0135	; 0x800135 <ramp_OCR1A>
    13f0:	50 91 36 01 	lds	r21, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    13f4:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    13f8:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    13fc:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <ramp_inc_dec>
    1400:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <ramp_inc_dec+0x1>
    1404:	a0 91 3b 01 	lds	r26, 0x013B	; 0x80013b <ramp_inc_dec+0x2>
    1408:	b0 91 3c 01 	lds	r27, 0x013C	; 0x80013c <ramp_inc_dec+0x3>
    140c:	84 17       	cp	r24, r20
    140e:	95 07       	cpc	r25, r21
    1410:	a6 07       	cpc	r26, r22
    1412:	b7 07       	cpc	r27, r23
    1414:	08 f0       	brcs	.+2      	; 0x1418 <motor_deceleration+0xe2>
    1416:	41 c0       	rjmp	.+130    	; 0x149a <motor_deceleration+0x164>
	{
		ramp_OCR1A-=ramp_inc_dec;
    1418:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <ramp_inc_dec>
    141c:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <ramp_inc_dec+0x1>
    1420:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <ramp_inc_dec+0x2>
    1424:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <ramp_inc_dec+0x3>
    1428:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <ramp_OCR1A>
    142c:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    1430:	a0 91 37 01 	lds	r26, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    1434:	b0 91 38 01 	lds	r27, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    1438:	84 1b       	sub	r24, r20
    143a:	95 0b       	sbc	r25, r21
    143c:	a6 0b       	sbc	r26, r22
    143e:	b7 0b       	sbc	r27, r23
    1440:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <ramp_OCR1A>
    1444:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <ramp_OCR1A+0x1>
    1448:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <ramp_OCR1A+0x2>
    144c:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <ramp_OCR1A+0x3>
		OCR1A = (1/(ramp_OCR1A*.000008333))-1;
    1450:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <ramp_OCR1A>
    1454:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <ramp_OCR1A+0x1>
    1458:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <ramp_OCR1A+0x2>
    145c:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <ramp_OCR1A+0x3>
    1460:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__floatunsisf>
    1464:	26 ef       	ldi	r18, 0xF6	; 246
    1466:	3d ec       	ldi	r19, 0xCD	; 205
    1468:	4b e0       	ldi	r20, 0x0B	; 11
    146a:	57 e3       	ldi	r21, 0x37	; 55
    146c:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <__mulsf3>
    1470:	9b 01       	movw	r18, r22
    1472:	ac 01       	movw	r20, r24
    1474:	60 e0       	ldi	r22, 0x00	; 0
    1476:	70 e0       	ldi	r23, 0x00	; 0
    1478:	80 e8       	ldi	r24, 0x80	; 128
    147a:	9f e3       	ldi	r25, 0x3F	; 63
    147c:	0e 94 03 0b 	call	0x1606	; 0x1606 <__divsf3>
    1480:	20 e0       	ldi	r18, 0x00	; 0
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	40 e8       	ldi	r20, 0x80	; 128
    1486:	5f e3       	ldi	r21, 0x3F	; 63
    1488:	0e 94 91 0a 	call	0x1522	; 0x1522 <__subsf3>
    148c:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__fixunssfsi>
    1490:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1494:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1498:	3f c0       	rjmp	.+126    	; 0x1518 <motor_deceleration+0x1e2>
	}
	else if(CHECKBIT(flag_switch, flag_stop))
    149a:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
    149e:	81 ff       	sbrs	r24, 1
    14a0:	3b c0       	rjmp	.+118    	; 0x1518 <motor_deceleration+0x1e2>
	{
		CLEARBIT(TCCR1B, CS11); // timer stopped
    14a2:	e1 e8       	ldi	r30, 0x81	; 129
    14a4:	f0 e0       	ldi	r31, 0x00	; 0
    14a6:	80 81       	ld	r24, Z
    14a8:	8d 7f       	andi	r24, 0xFD	; 253
    14aa:	80 83       	st	Z, r24
		flag_motor_1=MOTOR_1_IDLE;
    14ac:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <flag_motor_1>
		cw_pulse_ctr = 0;
    14b0:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <cw_pulse_ctr>
    14b4:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <cw_pulse_ctr+0x1>
    14b8:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <cw_pulse_ctr+0x2>
    14bc:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <cw_pulse_ctr+0x3>
		ccw_pulse_ctr = 0;
    14c0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <ccw_pulse_ctr>
    14c4:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <ccw_pulse_ctr+0x1>
    14c8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <ccw_pulse_ctr+0x2>
    14cc:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ccw_pulse_ctr+0x3>
		rev_count_inc = 0;
    14d0:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <rev_count_inc>
    14d4:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <rev_count_inc+0x1>
    14d8:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <rev_count_inc+0x2>
    14dc:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <rev_count_inc+0x3>
		ramp_OCR1A = 0;
    14e0:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <ramp_OCR1A>
    14e4:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <ramp_OCR1A+0x1>
    14e8:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <ramp_OCR1A+0x2>
    14ec:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <ramp_OCR1A+0x3>
		cyccnt_ctr=0;
    14f0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <cyccnt_ctr>
    14f4:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <cyccnt_ctr+0x1>
    14f8:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <cyccnt_ctr+0x2>
    14fc:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <cyccnt_ctr+0x3>
		WRITELOW(cw_port);
    1500:	2d 98       	cbi	0x05, 5	; 5
		WRITELOW(ccw_port);
    1502:	2e 98       	cbi	0x05, 6	; 5
		SETBIT(flag_motor2, MOTOR_2_DIR_CW);
    1504:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <flag_motor2>
    1508:	81 60       	ori	r24, 0x01	; 1
    150a:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <flag_motor2>
		CLEARBIT(flag_switch, flag_param_saved);
    150e:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <flag_switch>
    1512:	8b 7f       	andi	r24, 0xFB	; 251
    1514:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <flag_switch>
		
	}
}
    1518:	ff 90       	pop	r15
    151a:	ef 90       	pop	r14
    151c:	df 90       	pop	r13
    151e:	cf 90       	pop	r12
    1520:	08 95       	ret

00001522 <__subsf3>:
    1522:	50 58       	subi	r21, 0x80	; 128

00001524 <__addsf3>:
    1524:	bb 27       	eor	r27, r27
    1526:	aa 27       	eor	r26, r26
    1528:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__addsf3x>
    152c:	0c 94 1c 0c 	jmp	0x1838	; 0x1838 <__fp_round>
    1530:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_pscA>
    1534:	38 f0       	brcs	.+14     	; 0x1544 <__addsf3+0x20>
    1536:	0e 94 15 0c 	call	0x182a	; 0x182a <__fp_pscB>
    153a:	20 f0       	brcs	.+8      	; 0x1544 <__addsf3+0x20>
    153c:	39 f4       	brne	.+14     	; 0x154c <__addsf3+0x28>
    153e:	9f 3f       	cpi	r25, 0xFF	; 255
    1540:	19 f4       	brne	.+6      	; 0x1548 <__addsf3+0x24>
    1542:	26 f4       	brtc	.+8      	; 0x154c <__addsf3+0x28>
    1544:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__fp_nan>
    1548:	0e f4       	brtc	.+2      	; 0x154c <__addsf3+0x28>
    154a:	e0 95       	com	r30
    154c:	e7 fb       	bst	r30, 7
    154e:	0c 94 05 0c 	jmp	0x180a	; 0x180a <__fp_inf>

00001552 <__addsf3x>:
    1552:	e9 2f       	mov	r30, r25
    1554:	0e 94 2d 0c 	call	0x185a	; 0x185a <__fp_split3>
    1558:	58 f3       	brcs	.-42     	; 0x1530 <__addsf3+0xc>
    155a:	ba 17       	cp	r27, r26
    155c:	62 07       	cpc	r22, r18
    155e:	73 07       	cpc	r23, r19
    1560:	84 07       	cpc	r24, r20
    1562:	95 07       	cpc	r25, r21
    1564:	20 f0       	brcs	.+8      	; 0x156e <__addsf3x+0x1c>
    1566:	79 f4       	brne	.+30     	; 0x1586 <__addsf3x+0x34>
    1568:	a6 f5       	brtc	.+104    	; 0x15d2 <__addsf3x+0x80>
    156a:	0c 94 4f 0c 	jmp	0x189e	; 0x189e <__fp_zero>
    156e:	0e f4       	brtc	.+2      	; 0x1572 <__addsf3x+0x20>
    1570:	e0 95       	com	r30
    1572:	0b 2e       	mov	r0, r27
    1574:	ba 2f       	mov	r27, r26
    1576:	a0 2d       	mov	r26, r0
    1578:	0b 01       	movw	r0, r22
    157a:	b9 01       	movw	r22, r18
    157c:	90 01       	movw	r18, r0
    157e:	0c 01       	movw	r0, r24
    1580:	ca 01       	movw	r24, r20
    1582:	a0 01       	movw	r20, r0
    1584:	11 24       	eor	r1, r1
    1586:	ff 27       	eor	r31, r31
    1588:	59 1b       	sub	r21, r25
    158a:	99 f0       	breq	.+38     	; 0x15b2 <__addsf3x+0x60>
    158c:	59 3f       	cpi	r21, 0xF9	; 249
    158e:	50 f4       	brcc	.+20     	; 0x15a4 <__addsf3x+0x52>
    1590:	50 3e       	cpi	r21, 0xE0	; 224
    1592:	68 f1       	brcs	.+90     	; 0x15ee <__addsf3x+0x9c>
    1594:	1a 16       	cp	r1, r26
    1596:	f0 40       	sbci	r31, 0x00	; 0
    1598:	a2 2f       	mov	r26, r18
    159a:	23 2f       	mov	r18, r19
    159c:	34 2f       	mov	r19, r20
    159e:	44 27       	eor	r20, r20
    15a0:	58 5f       	subi	r21, 0xF8	; 248
    15a2:	f3 cf       	rjmp	.-26     	; 0x158a <__addsf3x+0x38>
    15a4:	46 95       	lsr	r20
    15a6:	37 95       	ror	r19
    15a8:	27 95       	ror	r18
    15aa:	a7 95       	ror	r26
    15ac:	f0 40       	sbci	r31, 0x00	; 0
    15ae:	53 95       	inc	r21
    15b0:	c9 f7       	brne	.-14     	; 0x15a4 <__addsf3x+0x52>
    15b2:	7e f4       	brtc	.+30     	; 0x15d2 <__addsf3x+0x80>
    15b4:	1f 16       	cp	r1, r31
    15b6:	ba 0b       	sbc	r27, r26
    15b8:	62 0b       	sbc	r22, r18
    15ba:	73 0b       	sbc	r23, r19
    15bc:	84 0b       	sbc	r24, r20
    15be:	ba f0       	brmi	.+46     	; 0x15ee <__addsf3x+0x9c>
    15c0:	91 50       	subi	r25, 0x01	; 1
    15c2:	a1 f0       	breq	.+40     	; 0x15ec <__addsf3x+0x9a>
    15c4:	ff 0f       	add	r31, r31
    15c6:	bb 1f       	adc	r27, r27
    15c8:	66 1f       	adc	r22, r22
    15ca:	77 1f       	adc	r23, r23
    15cc:	88 1f       	adc	r24, r24
    15ce:	c2 f7       	brpl	.-16     	; 0x15c0 <__addsf3x+0x6e>
    15d0:	0e c0       	rjmp	.+28     	; 0x15ee <__addsf3x+0x9c>
    15d2:	ba 0f       	add	r27, r26
    15d4:	62 1f       	adc	r22, r18
    15d6:	73 1f       	adc	r23, r19
    15d8:	84 1f       	adc	r24, r20
    15da:	48 f4       	brcc	.+18     	; 0x15ee <__addsf3x+0x9c>
    15dc:	87 95       	ror	r24
    15de:	77 95       	ror	r23
    15e0:	67 95       	ror	r22
    15e2:	b7 95       	ror	r27
    15e4:	f7 95       	ror	r31
    15e6:	9e 3f       	cpi	r25, 0xFE	; 254
    15e8:	08 f0       	brcs	.+2      	; 0x15ec <__addsf3x+0x9a>
    15ea:	b0 cf       	rjmp	.-160    	; 0x154c <__addsf3+0x28>
    15ec:	93 95       	inc	r25
    15ee:	88 0f       	add	r24, r24
    15f0:	08 f0       	brcs	.+2      	; 0x15f4 <__addsf3x+0xa2>
    15f2:	99 27       	eor	r25, r25
    15f4:	ee 0f       	add	r30, r30
    15f6:	97 95       	ror	r25
    15f8:	87 95       	ror	r24
    15fa:	08 95       	ret

000015fc <__cmpsf2>:
    15fc:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <__fp_cmp>
    1600:	08 f4       	brcc	.+2      	; 0x1604 <__cmpsf2+0x8>
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	08 95       	ret

00001606 <__divsf3>:
    1606:	0e 94 17 0b 	call	0x162e	; 0x162e <__divsf3x>
    160a:	0c 94 1c 0c 	jmp	0x1838	; 0x1838 <__fp_round>
    160e:	0e 94 15 0c 	call	0x182a	; 0x182a <__fp_pscB>
    1612:	58 f0       	brcs	.+22     	; 0x162a <__divsf3+0x24>
    1614:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_pscA>
    1618:	40 f0       	brcs	.+16     	; 0x162a <__divsf3+0x24>
    161a:	29 f4       	brne	.+10     	; 0x1626 <__divsf3+0x20>
    161c:	5f 3f       	cpi	r21, 0xFF	; 255
    161e:	29 f0       	breq	.+10     	; 0x162a <__divsf3+0x24>
    1620:	0c 94 05 0c 	jmp	0x180a	; 0x180a <__fp_inf>
    1624:	51 11       	cpse	r21, r1
    1626:	0c 94 50 0c 	jmp	0x18a0	; 0x18a0 <__fp_szero>
    162a:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__fp_nan>

0000162e <__divsf3x>:
    162e:	0e 94 2d 0c 	call	0x185a	; 0x185a <__fp_split3>
    1632:	68 f3       	brcs	.-38     	; 0x160e <__divsf3+0x8>

00001634 <__divsf3_pse>:
    1634:	99 23       	and	r25, r25
    1636:	b1 f3       	breq	.-20     	; 0x1624 <__divsf3+0x1e>
    1638:	55 23       	and	r21, r21
    163a:	91 f3       	breq	.-28     	; 0x1620 <__divsf3+0x1a>
    163c:	95 1b       	sub	r25, r21
    163e:	55 0b       	sbc	r21, r21
    1640:	bb 27       	eor	r27, r27
    1642:	aa 27       	eor	r26, r26
    1644:	62 17       	cp	r22, r18
    1646:	73 07       	cpc	r23, r19
    1648:	84 07       	cpc	r24, r20
    164a:	38 f0       	brcs	.+14     	; 0x165a <__divsf3_pse+0x26>
    164c:	9f 5f       	subi	r25, 0xFF	; 255
    164e:	5f 4f       	sbci	r21, 0xFF	; 255
    1650:	22 0f       	add	r18, r18
    1652:	33 1f       	adc	r19, r19
    1654:	44 1f       	adc	r20, r20
    1656:	aa 1f       	adc	r26, r26
    1658:	a9 f3       	breq	.-22     	; 0x1644 <__divsf3_pse+0x10>
    165a:	35 d0       	rcall	.+106    	; 0x16c6 <__divsf3_pse+0x92>
    165c:	0e 2e       	mov	r0, r30
    165e:	3a f0       	brmi	.+14     	; 0x166e <__divsf3_pse+0x3a>
    1660:	e0 e8       	ldi	r30, 0x80	; 128
    1662:	32 d0       	rcall	.+100    	; 0x16c8 <__divsf3_pse+0x94>
    1664:	91 50       	subi	r25, 0x01	; 1
    1666:	50 40       	sbci	r21, 0x00	; 0
    1668:	e6 95       	lsr	r30
    166a:	00 1c       	adc	r0, r0
    166c:	ca f7       	brpl	.-14     	; 0x1660 <__divsf3_pse+0x2c>
    166e:	2b d0       	rcall	.+86     	; 0x16c6 <__divsf3_pse+0x92>
    1670:	fe 2f       	mov	r31, r30
    1672:	29 d0       	rcall	.+82     	; 0x16c6 <__divsf3_pse+0x92>
    1674:	66 0f       	add	r22, r22
    1676:	77 1f       	adc	r23, r23
    1678:	88 1f       	adc	r24, r24
    167a:	bb 1f       	adc	r27, r27
    167c:	26 17       	cp	r18, r22
    167e:	37 07       	cpc	r19, r23
    1680:	48 07       	cpc	r20, r24
    1682:	ab 07       	cpc	r26, r27
    1684:	b0 e8       	ldi	r27, 0x80	; 128
    1686:	09 f0       	breq	.+2      	; 0x168a <__divsf3_pse+0x56>
    1688:	bb 0b       	sbc	r27, r27
    168a:	80 2d       	mov	r24, r0
    168c:	bf 01       	movw	r22, r30
    168e:	ff 27       	eor	r31, r31
    1690:	93 58       	subi	r25, 0x83	; 131
    1692:	5f 4f       	sbci	r21, 0xFF	; 255
    1694:	3a f0       	brmi	.+14     	; 0x16a4 <__divsf3_pse+0x70>
    1696:	9e 3f       	cpi	r25, 0xFE	; 254
    1698:	51 05       	cpc	r21, r1
    169a:	78 f0       	brcs	.+30     	; 0x16ba <__divsf3_pse+0x86>
    169c:	0c 94 05 0c 	jmp	0x180a	; 0x180a <__fp_inf>
    16a0:	0c 94 50 0c 	jmp	0x18a0	; 0x18a0 <__fp_szero>
    16a4:	5f 3f       	cpi	r21, 0xFF	; 255
    16a6:	e4 f3       	brlt	.-8      	; 0x16a0 <__divsf3_pse+0x6c>
    16a8:	98 3e       	cpi	r25, 0xE8	; 232
    16aa:	d4 f3       	brlt	.-12     	; 0x16a0 <__divsf3_pse+0x6c>
    16ac:	86 95       	lsr	r24
    16ae:	77 95       	ror	r23
    16b0:	67 95       	ror	r22
    16b2:	b7 95       	ror	r27
    16b4:	f7 95       	ror	r31
    16b6:	9f 5f       	subi	r25, 0xFF	; 255
    16b8:	c9 f7       	brne	.-14     	; 0x16ac <__divsf3_pse+0x78>
    16ba:	88 0f       	add	r24, r24
    16bc:	91 1d       	adc	r25, r1
    16be:	96 95       	lsr	r25
    16c0:	87 95       	ror	r24
    16c2:	97 f9       	bld	r25, 7
    16c4:	08 95       	ret
    16c6:	e1 e0       	ldi	r30, 0x01	; 1
    16c8:	66 0f       	add	r22, r22
    16ca:	77 1f       	adc	r23, r23
    16cc:	88 1f       	adc	r24, r24
    16ce:	bb 1f       	adc	r27, r27
    16d0:	62 17       	cp	r22, r18
    16d2:	73 07       	cpc	r23, r19
    16d4:	84 07       	cpc	r24, r20
    16d6:	ba 07       	cpc	r27, r26
    16d8:	20 f0       	brcs	.+8      	; 0x16e2 <__divsf3_pse+0xae>
    16da:	62 1b       	sub	r22, r18
    16dc:	73 0b       	sbc	r23, r19
    16de:	84 0b       	sbc	r24, r20
    16e0:	ba 0b       	sbc	r27, r26
    16e2:	ee 1f       	adc	r30, r30
    16e4:	88 f7       	brcc	.-30     	; 0x16c8 <__divsf3_pse+0x94>
    16e6:	e0 95       	com	r30
    16e8:	08 95       	ret

000016ea <__fixunssfsi>:
    16ea:	0e 94 35 0c 	call	0x186a	; 0x186a <__fp_splitA>
    16ee:	88 f0       	brcs	.+34     	; 0x1712 <__fixunssfsi+0x28>
    16f0:	9f 57       	subi	r25, 0x7F	; 127
    16f2:	98 f0       	brcs	.+38     	; 0x171a <__fixunssfsi+0x30>
    16f4:	b9 2f       	mov	r27, r25
    16f6:	99 27       	eor	r25, r25
    16f8:	b7 51       	subi	r27, 0x17	; 23
    16fa:	b0 f0       	brcs	.+44     	; 0x1728 <__fixunssfsi+0x3e>
    16fc:	e1 f0       	breq	.+56     	; 0x1736 <__fixunssfsi+0x4c>
    16fe:	66 0f       	add	r22, r22
    1700:	77 1f       	adc	r23, r23
    1702:	88 1f       	adc	r24, r24
    1704:	99 1f       	adc	r25, r25
    1706:	1a f0       	brmi	.+6      	; 0x170e <__fixunssfsi+0x24>
    1708:	ba 95       	dec	r27
    170a:	c9 f7       	brne	.-14     	; 0x16fe <__fixunssfsi+0x14>
    170c:	14 c0       	rjmp	.+40     	; 0x1736 <__fixunssfsi+0x4c>
    170e:	b1 30       	cpi	r27, 0x01	; 1
    1710:	91 f0       	breq	.+36     	; 0x1736 <__fixunssfsi+0x4c>
    1712:	0e 94 4f 0c 	call	0x189e	; 0x189e <__fp_zero>
    1716:	b1 e0       	ldi	r27, 0x01	; 1
    1718:	08 95       	ret
    171a:	0c 94 4f 0c 	jmp	0x189e	; 0x189e <__fp_zero>
    171e:	67 2f       	mov	r22, r23
    1720:	78 2f       	mov	r23, r24
    1722:	88 27       	eor	r24, r24
    1724:	b8 5f       	subi	r27, 0xF8	; 248
    1726:	39 f0       	breq	.+14     	; 0x1736 <__fixunssfsi+0x4c>
    1728:	b9 3f       	cpi	r27, 0xF9	; 249
    172a:	cc f3       	brlt	.-14     	; 0x171e <__fixunssfsi+0x34>
    172c:	86 95       	lsr	r24
    172e:	77 95       	ror	r23
    1730:	67 95       	ror	r22
    1732:	b3 95       	inc	r27
    1734:	d9 f7       	brne	.-10     	; 0x172c <__fixunssfsi+0x42>
    1736:	3e f4       	brtc	.+14     	; 0x1746 <__fixunssfsi+0x5c>
    1738:	90 95       	com	r25
    173a:	80 95       	com	r24
    173c:	70 95       	com	r23
    173e:	61 95       	neg	r22
    1740:	7f 4f       	sbci	r23, 0xFF	; 255
    1742:	8f 4f       	sbci	r24, 0xFF	; 255
    1744:	9f 4f       	sbci	r25, 0xFF	; 255
    1746:	08 95       	ret

00001748 <__floatunsisf>:
    1748:	e8 94       	clt
    174a:	09 c0       	rjmp	.+18     	; 0x175e <__floatsisf+0x12>

0000174c <__floatsisf>:
    174c:	97 fb       	bst	r25, 7
    174e:	3e f4       	brtc	.+14     	; 0x175e <__floatsisf+0x12>
    1750:	90 95       	com	r25
    1752:	80 95       	com	r24
    1754:	70 95       	com	r23
    1756:	61 95       	neg	r22
    1758:	7f 4f       	sbci	r23, 0xFF	; 255
    175a:	8f 4f       	sbci	r24, 0xFF	; 255
    175c:	9f 4f       	sbci	r25, 0xFF	; 255
    175e:	99 23       	and	r25, r25
    1760:	a9 f0       	breq	.+42     	; 0x178c <__floatsisf+0x40>
    1762:	f9 2f       	mov	r31, r25
    1764:	96 e9       	ldi	r25, 0x96	; 150
    1766:	bb 27       	eor	r27, r27
    1768:	93 95       	inc	r25
    176a:	f6 95       	lsr	r31
    176c:	87 95       	ror	r24
    176e:	77 95       	ror	r23
    1770:	67 95       	ror	r22
    1772:	b7 95       	ror	r27
    1774:	f1 11       	cpse	r31, r1
    1776:	f8 cf       	rjmp	.-16     	; 0x1768 <__floatsisf+0x1c>
    1778:	fa f4       	brpl	.+62     	; 0x17b8 <__floatsisf+0x6c>
    177a:	bb 0f       	add	r27, r27
    177c:	11 f4       	brne	.+4      	; 0x1782 <__floatsisf+0x36>
    177e:	60 ff       	sbrs	r22, 0
    1780:	1b c0       	rjmp	.+54     	; 0x17b8 <__floatsisf+0x6c>
    1782:	6f 5f       	subi	r22, 0xFF	; 255
    1784:	7f 4f       	sbci	r23, 0xFF	; 255
    1786:	8f 4f       	sbci	r24, 0xFF	; 255
    1788:	9f 4f       	sbci	r25, 0xFF	; 255
    178a:	16 c0       	rjmp	.+44     	; 0x17b8 <__floatsisf+0x6c>
    178c:	88 23       	and	r24, r24
    178e:	11 f0       	breq	.+4      	; 0x1794 <__floatsisf+0x48>
    1790:	96 e9       	ldi	r25, 0x96	; 150
    1792:	11 c0       	rjmp	.+34     	; 0x17b6 <__floatsisf+0x6a>
    1794:	77 23       	and	r23, r23
    1796:	21 f0       	breq	.+8      	; 0x17a0 <__floatsisf+0x54>
    1798:	9e e8       	ldi	r25, 0x8E	; 142
    179a:	87 2f       	mov	r24, r23
    179c:	76 2f       	mov	r23, r22
    179e:	05 c0       	rjmp	.+10     	; 0x17aa <__floatsisf+0x5e>
    17a0:	66 23       	and	r22, r22
    17a2:	71 f0       	breq	.+28     	; 0x17c0 <__floatsisf+0x74>
    17a4:	96 e8       	ldi	r25, 0x86	; 134
    17a6:	86 2f       	mov	r24, r22
    17a8:	70 e0       	ldi	r23, 0x00	; 0
    17aa:	60 e0       	ldi	r22, 0x00	; 0
    17ac:	2a f0       	brmi	.+10     	; 0x17b8 <__floatsisf+0x6c>
    17ae:	9a 95       	dec	r25
    17b0:	66 0f       	add	r22, r22
    17b2:	77 1f       	adc	r23, r23
    17b4:	88 1f       	adc	r24, r24
    17b6:	da f7       	brpl	.-10     	; 0x17ae <__floatsisf+0x62>
    17b8:	88 0f       	add	r24, r24
    17ba:	96 95       	lsr	r25
    17bc:	87 95       	ror	r24
    17be:	97 f9       	bld	r25, 7
    17c0:	08 95       	ret

000017c2 <__fp_cmp>:
    17c2:	99 0f       	add	r25, r25
    17c4:	00 08       	sbc	r0, r0
    17c6:	55 0f       	add	r21, r21
    17c8:	aa 0b       	sbc	r26, r26
    17ca:	e0 e8       	ldi	r30, 0x80	; 128
    17cc:	fe ef       	ldi	r31, 0xFE	; 254
    17ce:	16 16       	cp	r1, r22
    17d0:	17 06       	cpc	r1, r23
    17d2:	e8 07       	cpc	r30, r24
    17d4:	f9 07       	cpc	r31, r25
    17d6:	c0 f0       	brcs	.+48     	; 0x1808 <__fp_cmp+0x46>
    17d8:	12 16       	cp	r1, r18
    17da:	13 06       	cpc	r1, r19
    17dc:	e4 07       	cpc	r30, r20
    17de:	f5 07       	cpc	r31, r21
    17e0:	98 f0       	brcs	.+38     	; 0x1808 <__fp_cmp+0x46>
    17e2:	62 1b       	sub	r22, r18
    17e4:	73 0b       	sbc	r23, r19
    17e6:	84 0b       	sbc	r24, r20
    17e8:	95 0b       	sbc	r25, r21
    17ea:	39 f4       	brne	.+14     	; 0x17fa <__fp_cmp+0x38>
    17ec:	0a 26       	eor	r0, r26
    17ee:	61 f0       	breq	.+24     	; 0x1808 <__fp_cmp+0x46>
    17f0:	23 2b       	or	r18, r19
    17f2:	24 2b       	or	r18, r20
    17f4:	25 2b       	or	r18, r21
    17f6:	21 f4       	brne	.+8      	; 0x1800 <__fp_cmp+0x3e>
    17f8:	08 95       	ret
    17fa:	0a 26       	eor	r0, r26
    17fc:	09 f4       	brne	.+2      	; 0x1800 <__fp_cmp+0x3e>
    17fe:	a1 40       	sbci	r26, 0x01	; 1
    1800:	a6 95       	lsr	r26
    1802:	8f ef       	ldi	r24, 0xFF	; 255
    1804:	81 1d       	adc	r24, r1
    1806:	81 1d       	adc	r24, r1
    1808:	08 95       	ret

0000180a <__fp_inf>:
    180a:	97 f9       	bld	r25, 7
    180c:	9f 67       	ori	r25, 0x7F	; 127
    180e:	80 e8       	ldi	r24, 0x80	; 128
    1810:	70 e0       	ldi	r23, 0x00	; 0
    1812:	60 e0       	ldi	r22, 0x00	; 0
    1814:	08 95       	ret

00001816 <__fp_nan>:
    1816:	9f ef       	ldi	r25, 0xFF	; 255
    1818:	80 ec       	ldi	r24, 0xC0	; 192
    181a:	08 95       	ret

0000181c <__fp_pscA>:
    181c:	00 24       	eor	r0, r0
    181e:	0a 94       	dec	r0
    1820:	16 16       	cp	r1, r22
    1822:	17 06       	cpc	r1, r23
    1824:	18 06       	cpc	r1, r24
    1826:	09 06       	cpc	r0, r25
    1828:	08 95       	ret

0000182a <__fp_pscB>:
    182a:	00 24       	eor	r0, r0
    182c:	0a 94       	dec	r0
    182e:	12 16       	cp	r1, r18
    1830:	13 06       	cpc	r1, r19
    1832:	14 06       	cpc	r1, r20
    1834:	05 06       	cpc	r0, r21
    1836:	08 95       	ret

00001838 <__fp_round>:
    1838:	09 2e       	mov	r0, r25
    183a:	03 94       	inc	r0
    183c:	00 0c       	add	r0, r0
    183e:	11 f4       	brne	.+4      	; 0x1844 <__fp_round+0xc>
    1840:	88 23       	and	r24, r24
    1842:	52 f0       	brmi	.+20     	; 0x1858 <__fp_round+0x20>
    1844:	bb 0f       	add	r27, r27
    1846:	40 f4       	brcc	.+16     	; 0x1858 <__fp_round+0x20>
    1848:	bf 2b       	or	r27, r31
    184a:	11 f4       	brne	.+4      	; 0x1850 <__fp_round+0x18>
    184c:	60 ff       	sbrs	r22, 0
    184e:	04 c0       	rjmp	.+8      	; 0x1858 <__fp_round+0x20>
    1850:	6f 5f       	subi	r22, 0xFF	; 255
    1852:	7f 4f       	sbci	r23, 0xFF	; 255
    1854:	8f 4f       	sbci	r24, 0xFF	; 255
    1856:	9f 4f       	sbci	r25, 0xFF	; 255
    1858:	08 95       	ret

0000185a <__fp_split3>:
    185a:	57 fd       	sbrc	r21, 7
    185c:	90 58       	subi	r25, 0x80	; 128
    185e:	44 0f       	add	r20, r20
    1860:	55 1f       	adc	r21, r21
    1862:	59 f0       	breq	.+22     	; 0x187a <__fp_splitA+0x10>
    1864:	5f 3f       	cpi	r21, 0xFF	; 255
    1866:	71 f0       	breq	.+28     	; 0x1884 <__fp_splitA+0x1a>
    1868:	47 95       	ror	r20

0000186a <__fp_splitA>:
    186a:	88 0f       	add	r24, r24
    186c:	97 fb       	bst	r25, 7
    186e:	99 1f       	adc	r25, r25
    1870:	61 f0       	breq	.+24     	; 0x188a <__fp_splitA+0x20>
    1872:	9f 3f       	cpi	r25, 0xFF	; 255
    1874:	79 f0       	breq	.+30     	; 0x1894 <__fp_splitA+0x2a>
    1876:	87 95       	ror	r24
    1878:	08 95       	ret
    187a:	12 16       	cp	r1, r18
    187c:	13 06       	cpc	r1, r19
    187e:	14 06       	cpc	r1, r20
    1880:	55 1f       	adc	r21, r21
    1882:	f2 cf       	rjmp	.-28     	; 0x1868 <__fp_split3+0xe>
    1884:	46 95       	lsr	r20
    1886:	f1 df       	rcall	.-30     	; 0x186a <__fp_splitA>
    1888:	08 c0       	rjmp	.+16     	; 0x189a <__fp_splitA+0x30>
    188a:	16 16       	cp	r1, r22
    188c:	17 06       	cpc	r1, r23
    188e:	18 06       	cpc	r1, r24
    1890:	99 1f       	adc	r25, r25
    1892:	f1 cf       	rjmp	.-30     	; 0x1876 <__fp_splitA+0xc>
    1894:	86 95       	lsr	r24
    1896:	71 05       	cpc	r23, r1
    1898:	61 05       	cpc	r22, r1
    189a:	08 94       	sec
    189c:	08 95       	ret

0000189e <__fp_zero>:
    189e:	e8 94       	clt

000018a0 <__fp_szero>:
    18a0:	bb 27       	eor	r27, r27
    18a2:	66 27       	eor	r22, r22
    18a4:	77 27       	eor	r23, r23
    18a6:	cb 01       	movw	r24, r22
    18a8:	97 f9       	bld	r25, 7
    18aa:	08 95       	ret

000018ac <__gesf2>:
    18ac:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <__fp_cmp>
    18b0:	08 f4       	brcc	.+2      	; 0x18b4 <__gesf2+0x8>
    18b2:	8f ef       	ldi	r24, 0xFF	; 255
    18b4:	08 95       	ret

000018b6 <__mulsf3>:
    18b6:	0e 94 6e 0c 	call	0x18dc	; 0x18dc <__mulsf3x>
    18ba:	0c 94 1c 0c 	jmp	0x1838	; 0x1838 <__fp_round>
    18be:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_pscA>
    18c2:	38 f0       	brcs	.+14     	; 0x18d2 <__mulsf3+0x1c>
    18c4:	0e 94 15 0c 	call	0x182a	; 0x182a <__fp_pscB>
    18c8:	20 f0       	brcs	.+8      	; 0x18d2 <__mulsf3+0x1c>
    18ca:	95 23       	and	r25, r21
    18cc:	11 f0       	breq	.+4      	; 0x18d2 <__mulsf3+0x1c>
    18ce:	0c 94 05 0c 	jmp	0x180a	; 0x180a <__fp_inf>
    18d2:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__fp_nan>
    18d6:	11 24       	eor	r1, r1
    18d8:	0c 94 50 0c 	jmp	0x18a0	; 0x18a0 <__fp_szero>

000018dc <__mulsf3x>:
    18dc:	0e 94 2d 0c 	call	0x185a	; 0x185a <__fp_split3>
    18e0:	70 f3       	brcs	.-36     	; 0x18be <__mulsf3+0x8>

000018e2 <__mulsf3_pse>:
    18e2:	95 9f       	mul	r25, r21
    18e4:	c1 f3       	breq	.-16     	; 0x18d6 <__mulsf3+0x20>
    18e6:	95 0f       	add	r25, r21
    18e8:	50 e0       	ldi	r21, 0x00	; 0
    18ea:	55 1f       	adc	r21, r21
    18ec:	62 9f       	mul	r22, r18
    18ee:	f0 01       	movw	r30, r0
    18f0:	72 9f       	mul	r23, r18
    18f2:	bb 27       	eor	r27, r27
    18f4:	f0 0d       	add	r31, r0
    18f6:	b1 1d       	adc	r27, r1
    18f8:	63 9f       	mul	r22, r19
    18fa:	aa 27       	eor	r26, r26
    18fc:	f0 0d       	add	r31, r0
    18fe:	b1 1d       	adc	r27, r1
    1900:	aa 1f       	adc	r26, r26
    1902:	64 9f       	mul	r22, r20
    1904:	66 27       	eor	r22, r22
    1906:	b0 0d       	add	r27, r0
    1908:	a1 1d       	adc	r26, r1
    190a:	66 1f       	adc	r22, r22
    190c:	82 9f       	mul	r24, r18
    190e:	22 27       	eor	r18, r18
    1910:	b0 0d       	add	r27, r0
    1912:	a1 1d       	adc	r26, r1
    1914:	62 1f       	adc	r22, r18
    1916:	73 9f       	mul	r23, r19
    1918:	b0 0d       	add	r27, r0
    191a:	a1 1d       	adc	r26, r1
    191c:	62 1f       	adc	r22, r18
    191e:	83 9f       	mul	r24, r19
    1920:	a0 0d       	add	r26, r0
    1922:	61 1d       	adc	r22, r1
    1924:	22 1f       	adc	r18, r18
    1926:	74 9f       	mul	r23, r20
    1928:	33 27       	eor	r19, r19
    192a:	a0 0d       	add	r26, r0
    192c:	61 1d       	adc	r22, r1
    192e:	23 1f       	adc	r18, r19
    1930:	84 9f       	mul	r24, r20
    1932:	60 0d       	add	r22, r0
    1934:	21 1d       	adc	r18, r1
    1936:	82 2f       	mov	r24, r18
    1938:	76 2f       	mov	r23, r22
    193a:	6a 2f       	mov	r22, r26
    193c:	11 24       	eor	r1, r1
    193e:	9f 57       	subi	r25, 0x7F	; 127
    1940:	50 40       	sbci	r21, 0x00	; 0
    1942:	9a f0       	brmi	.+38     	; 0x196a <__mulsf3_pse+0x88>
    1944:	f1 f0       	breq	.+60     	; 0x1982 <__mulsf3_pse+0xa0>
    1946:	88 23       	and	r24, r24
    1948:	4a f0       	brmi	.+18     	; 0x195c <__mulsf3_pse+0x7a>
    194a:	ee 0f       	add	r30, r30
    194c:	ff 1f       	adc	r31, r31
    194e:	bb 1f       	adc	r27, r27
    1950:	66 1f       	adc	r22, r22
    1952:	77 1f       	adc	r23, r23
    1954:	88 1f       	adc	r24, r24
    1956:	91 50       	subi	r25, 0x01	; 1
    1958:	50 40       	sbci	r21, 0x00	; 0
    195a:	a9 f7       	brne	.-22     	; 0x1946 <__mulsf3_pse+0x64>
    195c:	9e 3f       	cpi	r25, 0xFE	; 254
    195e:	51 05       	cpc	r21, r1
    1960:	80 f0       	brcs	.+32     	; 0x1982 <__mulsf3_pse+0xa0>
    1962:	0c 94 05 0c 	jmp	0x180a	; 0x180a <__fp_inf>
    1966:	0c 94 50 0c 	jmp	0x18a0	; 0x18a0 <__fp_szero>
    196a:	5f 3f       	cpi	r21, 0xFF	; 255
    196c:	e4 f3       	brlt	.-8      	; 0x1966 <__mulsf3_pse+0x84>
    196e:	98 3e       	cpi	r25, 0xE8	; 232
    1970:	d4 f3       	brlt	.-12     	; 0x1966 <__mulsf3_pse+0x84>
    1972:	86 95       	lsr	r24
    1974:	77 95       	ror	r23
    1976:	67 95       	ror	r22
    1978:	b7 95       	ror	r27
    197a:	f7 95       	ror	r31
    197c:	e7 95       	ror	r30
    197e:	9f 5f       	subi	r25, 0xFF	; 255
    1980:	c1 f7       	brne	.-16     	; 0x1972 <__mulsf3_pse+0x90>
    1982:	fe 2b       	or	r31, r30
    1984:	88 0f       	add	r24, r24
    1986:	91 1d       	adc	r25, r1
    1988:	96 95       	lsr	r25
    198a:	87 95       	ror	r24
    198c:	97 f9       	bld	r25, 7
    198e:	08 95       	ret

00001990 <__udivmodsi4>:
    1990:	a1 e2       	ldi	r26, 0x21	; 33
    1992:	1a 2e       	mov	r1, r26
    1994:	aa 1b       	sub	r26, r26
    1996:	bb 1b       	sub	r27, r27
    1998:	fd 01       	movw	r30, r26
    199a:	0d c0       	rjmp	.+26     	; 0x19b6 <__udivmodsi4_ep>

0000199c <__udivmodsi4_loop>:
    199c:	aa 1f       	adc	r26, r26
    199e:	bb 1f       	adc	r27, r27
    19a0:	ee 1f       	adc	r30, r30
    19a2:	ff 1f       	adc	r31, r31
    19a4:	a2 17       	cp	r26, r18
    19a6:	b3 07       	cpc	r27, r19
    19a8:	e4 07       	cpc	r30, r20
    19aa:	f5 07       	cpc	r31, r21
    19ac:	20 f0       	brcs	.+8      	; 0x19b6 <__udivmodsi4_ep>
    19ae:	a2 1b       	sub	r26, r18
    19b0:	b3 0b       	sbc	r27, r19
    19b2:	e4 0b       	sbc	r30, r20
    19b4:	f5 0b       	sbc	r31, r21

000019b6 <__udivmodsi4_ep>:
    19b6:	66 1f       	adc	r22, r22
    19b8:	77 1f       	adc	r23, r23
    19ba:	88 1f       	adc	r24, r24
    19bc:	99 1f       	adc	r25, r25
    19be:	1a 94       	dec	r1
    19c0:	69 f7       	brne	.-38     	; 0x199c <__udivmodsi4_loop>
    19c2:	60 95       	com	r22
    19c4:	70 95       	com	r23
    19c6:	80 95       	com	r24
    19c8:	90 95       	com	r25
    19ca:	9b 01       	movw	r18, r22
    19cc:	ac 01       	movw	r20, r24
    19ce:	bd 01       	movw	r22, r26
    19d0:	cf 01       	movw	r24, r30
    19d2:	08 95       	ret

000019d4 <__muluhisi3>:
    19d4:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <__umulhisi3>
    19d8:	a5 9f       	mul	r26, r21
    19da:	90 0d       	add	r25, r0
    19dc:	b4 9f       	mul	r27, r20
    19de:	90 0d       	add	r25, r0
    19e0:	a4 9f       	mul	r26, r20
    19e2:	80 0d       	add	r24, r0
    19e4:	91 1d       	adc	r25, r1
    19e6:	11 24       	eor	r1, r1
    19e8:	08 95       	ret

000019ea <__umulhisi3>:
    19ea:	a2 9f       	mul	r26, r18
    19ec:	b0 01       	movw	r22, r0
    19ee:	b3 9f       	mul	r27, r19
    19f0:	c0 01       	movw	r24, r0
    19f2:	a3 9f       	mul	r26, r19
    19f4:	70 0d       	add	r23, r0
    19f6:	81 1d       	adc	r24, r1
    19f8:	11 24       	eor	r1, r1
    19fa:	91 1d       	adc	r25, r1
    19fc:	b2 9f       	mul	r27, r18
    19fe:	70 0d       	add	r23, r0
    1a00:	81 1d       	adc	r24, r1
    1a02:	11 24       	eor	r1, r1
    1a04:	91 1d       	adc	r25, r1
    1a06:	08 95       	ret

00001a08 <_exit>:
    1a08:	f8 94       	cli

00001a0a <__stop_program>:
    1a0a:	ff cf       	rjmp	.-2      	; 0x1a0a <__stop_program>
